{"version":3,"file":"reveal.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/constants.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\r\n * Extend object a with the properties of object b.\r\n * If there's a conflict, object b takes precedence.\r\n *\r\n * @param {object} a\r\n * @param {object} b\r\n */\r\nexport const extend = ( a, b ) => {\r\n\r\n\tfor( let i in b ) {\r\n\t\ta[ i ] = b[ i ];\r\n\t}\r\n\r\n\treturn a;\r\n\r\n}\r\n\r\n/**\r\n * querySelectorAll but returns an Array.\r\n */\r\nexport const queryAll = ( el, selector ) => {\r\n\r\n\treturn Array.from( el.querySelectorAll( selector ) );\r\n\r\n}\r\n\r\n/**\r\n * classList.toggle() with cross browser support\r\n */\r\nexport const toggleClass = ( el, className, value ) => {\r\n\tif( value ) {\r\n\t\tel.classList.add( className );\r\n\t}\r\n\telse {\r\n\t\tel.classList.remove( className );\r\n\t}\r\n}\r\n\r\n/**\r\n * Utility for deserializing a value.\r\n *\r\n * @param {*} value\r\n * @return {*}\r\n */\r\nexport const deserialize = ( value ) => {\r\n\r\n\tif( typeof value === 'string' ) {\r\n\t\tif( value === 'null' ) return null;\r\n\t\telse if( value === 'true' ) return true;\r\n\t\telse if( value === 'false' ) return false;\r\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\r\n\t}\r\n\r\n\treturn value;\r\n\r\n}\r\n\r\n/**\r\n * Measures the distance in pixels between point a\r\n * and point b.\r\n *\r\n * @param {object} a point with x/y properties\r\n * @param {object} b point with x/y properties\r\n *\r\n * @return {number}\r\n */\r\nexport const distanceBetween = ( a, b ) => {\r\n\r\n\tlet dx = a.x - b.x,\r\n\t\tdy = a.y - b.y;\r\n\r\n\treturn Math.sqrt( dx*dx + dy*dy );\r\n\r\n}\r\n\r\n/**\r\n * Applies a CSS transform to the target element.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} transform\r\n */\r\nexport const transformElement = ( element, transform ) => {\r\n\r\n\telement.style.transform = transform;\r\n\r\n}\r\n\r\n/**\r\n * Element.matches with IE support.\r\n *\r\n * @param {HTMLElement} target The element to match\r\n * @param {String} selector The CSS selector to match\r\n * the element against\r\n *\r\n * @return {Boolean}\r\n */\r\nexport const matches = ( target, selector ) => {\r\n\r\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\r\n\r\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\r\n\r\n}\r\n\r\n/**\r\n * Find the closest parent that matches the given\r\n * selector.\r\n *\r\n * @param {HTMLElement} target The child element\r\n * @param {String} selector The CSS selector to match\r\n * the parents against\r\n *\r\n * @return {HTMLElement} The matched parent or null\r\n * if no matching parent was found\r\n */\r\nexport const closest = ( target, selector ) => {\r\n\r\n\t// Native Element.closest\r\n\tif( typeof target.closest === 'function' ) {\r\n\t\treturn target.closest( selector );\r\n\t}\r\n\r\n\t// Polyfill\r\n\twhile( target ) {\r\n\t\tif( matches( target, selector ) ) {\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\t// Keep searching\r\n\t\ttarget = target.parentNode;\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n/**\r\n * Handling the fullscreen functionality via the fullscreen API\r\n *\r\n * @see http://fullscreen.spec.whatwg.org/\r\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\r\n */\r\nexport const enterFullscreen = element => {\r\n\r\n\telement = element || document.documentElement;\r\n\r\n\t// Check which implementation is available\r\n\tlet requestMethod = element.requestFullscreen ||\r\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\r\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\r\n\t\t\t\t\t\telement.mozRequestFullScreen ||\r\n\t\t\t\t\t\telement.msRequestFullscreen;\r\n\r\n\tif( requestMethod ) {\r\n\t\trequestMethod.apply( element );\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Creates an HTML element and returns a reference to it.\r\n * If the element already exists the existing instance will\r\n * be returned.\r\n *\r\n * @param {HTMLElement} container\r\n * @param {string} tagname\r\n * @param {string} classname\r\n * @param {string} innerHTML\r\n *\r\n * @return {HTMLElement}\r\n */\r\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\r\n\r\n\t// Find all nodes matching the description\r\n\tlet nodes = container.querySelectorAll( '.' + classname );\r\n\r\n\t// Check all matches to find one which is a direct child of\r\n\t// the specified container\r\n\tfor( let i = 0; i < nodes.length; i++ ) {\r\n\t\tlet testNode = nodes[i];\r\n\t\tif( testNode.parentNode === container ) {\r\n\t\t\treturn testNode;\r\n\t\t}\r\n\t}\r\n\r\n\t// If no node was found, create it now\r\n\tlet node = document.createElement( tagname );\r\n\tnode.className = classname;\r\n\tnode.innerHTML = innerHTML;\r\n\tcontainer.appendChild( node );\r\n\r\n\treturn node;\r\n\r\n}\r\n\r\n/**\r\n * Injects the given CSS styles into the DOM.\r\n *\r\n * @param {string} value\r\n */\r\nexport const createStyleSheet = ( value ) => {\r\n\r\n\tlet tag = document.createElement( 'style' );\r\n\ttag.type = 'text/css';\r\n\r\n\tif( value && value.length > 0 ) {\r\n\t\tif( tag.styleSheet ) {\r\n\t\t\ttag.styleSheet.cssText = value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttag.appendChild( document.createTextNode( value ) );\r\n\t\t}\r\n\t}\r\n\r\n\tdocument.head.appendChild( tag );\r\n\r\n\treturn tag;\r\n\r\n}\r\n\r\n/**\r\n * Returns a key:value hash of all query params.\r\n */\r\nexport const getQueryHash = () => {\r\n\r\n\tlet query = {};\r\n\r\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\r\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\r\n\t} );\r\n\r\n\t// Basic deserialization\r\n\tfor( let i in query ) {\r\n\t\tlet value = query[ i ];\r\n\r\n\t\tquery[ i ] = deserialize( unescape( value ) );\r\n\t}\r\n\r\n\t// Do not accept new dependencies via query config to avoid\r\n\t// the potential of malicious script injection\r\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\r\n\r\n\treturn query;\r\n\r\n}\r\n\r\n/**\r\n * Returns the remaining height within the parent of the\r\n * target element.\r\n *\r\n * remaining height = [ configured parent height ] - [ current parent height ]\r\n *\r\n * @param {HTMLElement} element\r\n * @param {number} [height]\r\n */\r\nexport const getRemainingHeight = ( element, height = 0 ) => {\r\n\r\n\tif( element ) {\r\n\t\tlet newHeight, oldHeight = element.style.height;\r\n\r\n\t\t// Change the .stretch element height to 0 in order find the height of all\r\n\t\t// the other elements\r\n\t\telement.style.height = '0px';\r\n\r\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\r\n\t\t// Restore it temporarily to its natural height.\r\n\t\telement.parentNode.style.height = 'auto';\r\n\r\n\t\tnewHeight = height - element.parentNode.offsetHeight;\r\n\r\n\t\t// Restore the old height, just in case\r\n\t\telement.style.height = oldHeight + 'px';\r\n\r\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\r\n\t\telement.parentNode.style.removeProperty('height');\r\n\r\n\t\treturn newHeight;\r\n\t}\r\n\r\n\treturn height;\r\n\r\n}\r\n\r\nconst fileExtensionToMimeMap = {\r\n\t'mp4': 'video/mp4',\r\n\t'm4a': 'video/mp4',\r\n\t'ogv': 'video/ogg',\r\n\t'mpeg': 'video/mpeg',\r\n\t'webm': 'video/webm'\r\n}\r\n\r\n/**\r\n * Guess the MIME type for common file formats.\r\n */\r\nexport const getMimeTypeFromFile = ( filename='' ) => {\r\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\r\n}","const UA = navigator.userAgent;\r\n\r\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\r\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\r\n\r\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\r\n\r\nexport const isAndroid = /android/gi.test( UA );","/**\n * fitty v2.3.6 - Snugly resizes text to fit its parent container\n * Copyright (c) 2022 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { extend, queryAll, closest, getMimeTypeFromFile } from '../utils/util.js'\r\nimport { isMobile } from '../utils/device.js'\r\n\r\nimport fitty from 'fitty';\r\n\r\n/**\r\n * Handles loading, unloading and playback of slide\r\n * content such as images, videos and iframes.\r\n */\r\nexport default class SlideContent {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Should the given element be preloaded?\r\n\t * Decides based on local element attributes and global config.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tshouldPreload( element ) {\r\n\r\n\t\t// Prefer an explicit global preload setting\r\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\r\n\r\n\t\t// If no global setting is available, fall back on the element's\r\n\t\t// own preload setting\r\n\t\tif( typeof preload !== 'boolean' ) {\r\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\r\n\t\t}\r\n\r\n\t\treturn preload;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the given slide is within the configured view\r\n\t * distance. Shows the slide element and loads any content\r\n\t * that is set to load lazily (data-src).\r\n\t *\r\n\t * @param {HTMLElement} slide Slide to show\r\n\t */\r\n\tload( slide, options = {} ) {\r\n\r\n\t\t// Show the slide element\r\n\t\tslide.style.display = this.Reveal.getConfig().display;\r\n\r\n\t\t// Media elements with data-src attributes\r\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\r\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\r\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\r\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\r\n\t\t\t\telement.removeAttribute( 'data-src' );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Media elements with <source> children\r\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\r\n\t\t\tlet sources = 0;\r\n\r\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\r\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\r\n\t\t\t\tsource.removeAttribute( 'data-src' );\r\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\r\n\t\t\t\tsources += 1;\r\n\t\t\t} );\r\n\r\n\t\t\t// Enable inline video playback in mobile Safari\r\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\r\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\r\n\t\t\t}\r\n\r\n\t\t\t// If we rewrote sources for this video/audio element, we need\r\n\t\t\t// to manually tell it to load from its new origin\r\n\t\t\tif( sources > 0 ) {\r\n\t\t\t\tmedia.load();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\r\n\t\t// Show the corresponding background element\r\n\t\tlet background = slide.slideBackgroundElement;\r\n\t\tif( background ) {\r\n\t\t\tbackground.style.display = 'block';\r\n\r\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\r\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\r\n\r\n\t\t\t// If the background contains media, load it\r\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\r\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\r\n\r\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\r\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\r\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\r\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\r\n\r\n\t\t\t\t// Images\r\n\t\t\t\tif( backgroundImage ) {\r\n\t\t\t\t\t// base64\r\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\r\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// URL(s)\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\r\n\t\t\t\t\t\t\treturn `url(${encodeURI(background.trim())})`;\r\n\t\t\t\t\t\t}).join( ',' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Videos\r\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\r\n\t\t\t\t\tlet video = document.createElement( 'video' );\r\n\r\n\t\t\t\t\tif( backgroundVideoLoop ) {\r\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( backgroundVideoMuted ) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Enable inline playback in mobile Safari\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// Mute is required for video to play when using\r\n\t\t\t\t\t// swipe gestures to navigate since they don't\r\n\t\t\t\t\t// count as direct user actions :'(\r\n\t\t\t\t\tif( isMobile ) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Support comma separated lists of video sources\r\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\r\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\r\n\t\t\t\t\t\tif( type ) {\r\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild( video );\r\n\t\t\t\t}\r\n\t\t\t\t// Iframes\r\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\r\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\r\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\r\n\r\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\r\n\r\n\t\t\t\t\tiframe.style.width  = '100%';\r\n\t\t\t\t\tiframe.style.height = '100%';\r\n\t\t\t\t\tiframe.style.maxHeight = '100%';\r\n\t\t\t\t\tiframe.style.maxWidth = '100%';\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Start loading preloadable iframes\r\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\r\n\t\t\tif( backgroundIframeElement ) {\r\n\r\n\t\t\t\t// Check if this iframe is eligible to be preloaded\r\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\r\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\r\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.layout( slide );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies JS-dependent layout helpers for the scope.\r\n\t */\r\n\tlayout( scopeElement ) {\r\n\r\n\t\t// Autosize text with the r-fit-text class based on the\r\n\t\t// size of its container. This needs to happen after the\r\n\t\t// slide is visible in order to measure the text.\r\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\r\n\t\t\tfitty( element, {\r\n\t\t\t\tminSize: 24,\r\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\r\n\t\t\t\tobserveMutations: false,\r\n\t\t\t\tobserveWindow: false\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unloads and hides the given slide. This is called when the\r\n\t * slide is moved outside of the configured view distance.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tunload( slide ) {\r\n\r\n\t\t// Hide the slide element\r\n\t\tslide.style.display = 'none';\r\n\r\n\t\t// Hide the corresponding background element\r\n\t\tlet background = this.Reveal.getSlideBackground( slide );\r\n\t\tif( background ) {\r\n\t\t\tbackground.style.display = 'none';\r\n\r\n\t\t\t// Unload any background iframes\r\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\r\n\t\t\t\telement.removeAttribute( 'src' );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Reset lazy-loaded media elements with src attributes\r\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\r\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\r\n\t\t\telement.removeAttribute( 'src' );\r\n\t\t} );\r\n\r\n\t\t// Reset lazy-loaded media elements with <source> children\r\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\r\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\r\n\t\t\tsource.removeAttribute( 'src' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Enforces origin-specific format rules for embedded media.\r\n\t */\r\n\tformatEmbeddedContent() {\r\n\r\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\r\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\r\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\r\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\r\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// YouTube frames must include \"?enablejsapi=1\"\r\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\r\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\r\n\r\n\t\t// Vimeo frames must include \"?api=1\"\r\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\r\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Start playback of any embedded content inside of\r\n\t * the given element.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstartEmbeddedContent( element ) {\r\n\r\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\r\n\r\n\t\t\t// Restart GIFs\r\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\r\n\t\t\t\t// Setting the same unchanged source like this was confirmed\r\n\t\t\t\t// to work in Chrome, FF & Safari\r\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\r\n\t\t\t} );\r\n\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\r\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\r\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\r\n\r\n\t\t\t\t\t// If the media is ready, start playback\r\n\t\t\t\t\tif( el.readyState > 1 ) {\r\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\r\n\t\t\t\t\t// of waiting, we initiate playback\r\n\t\t\t\t\telse if( isMobile ) {\r\n\t\t\t\t\t\tlet promise = el.play();\r\n\r\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\r\n\t\t\t\t\t\t// that the viewer can start the media on their own\r\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\r\n\t\t\t\t\t\t\tpromise.catch( () => {\r\n\t\t\t\t\t\t\t\tel.controls = true;\r\n\r\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\r\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\r\n\t\t\t\t\t\t\t\t\tel.controls = false;\r\n\t\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// If the media isn't loaded, wait before playing\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\r\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Normal iframes\r\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\r\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\r\n\t\t\t} );\r\n\r\n\t\t\t// Lazy loading iframes\r\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\r\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\r\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\r\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\r\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts playing an embedded video/audio element after\r\n\t * it has finished loading.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedMedia( event ) {\r\n\r\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\r\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\r\n\r\n\t\tif( isAttachedToDOM && isVisible ) {\r\n\t\t\tevent.target.currentTime = 0;\r\n\t\t\tevent.target.play();\r\n\t\t}\r\n\r\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * \"Starts\" the content of an embedded iframe using the\r\n\t * postMessage API.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedIframe( event ) {\r\n\r\n\t\tlet iframe = event.target;\r\n\r\n\t\tif( iframe && iframe.contentWindow ) {\r\n\r\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\r\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\r\n\r\n\t\t\tif( isAttachedToDOM && isVisible ) {\r\n\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\r\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// YouTube postMessage API\r\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t\t// Vimeo postMessage API\r\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t\t// Generic postMessage API\r\n\t\t\t\telse {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stop playback of any embedded content inside of\r\n\t * the targeted slide.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstopEmbeddedContent( element, options = {} ) {\r\n\r\n\t\toptions = extend( {\r\n\t\t\t// Defaults\r\n\t\t\tunloadIframes: true\r\n\t\t}, options );\r\n\r\n\t\tif( element && element.parentNode ) {\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\r\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\r\n\t\t\t\t\tel.pause();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\r\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\r\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\r\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\r\n\t\t\t});\r\n\r\n\t\t\t// YouTube postMessage API\r\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\r\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Vimeo postMessage API\r\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\r\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif( options.unloadIframes === true ) {\r\n\t\t\t\t// Unload lazy-loaded iframes\r\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\r\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\r\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\r\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\r\n\t\t\t\t\tel.removeAttribute( 'src' );\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","/**\r\n * Handles the display of reveal.js' optional slide number.\r\n */\r\nexport default class SlideNumber {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'slide-number';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tlet slideNumberDisplay = 'none';\r\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\r\n\t\t\tif( config.showSlideNumber === 'all' ) {\r\n\t\t\t\tslideNumberDisplay = 'block';\r\n\t\t\t}\r\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\r\n\t\t\t\tslideNumberDisplay = 'block';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.element.style.display = slideNumberDisplay;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the slide number to match the current slide.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\t// Update slide number if enabled\r\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\r\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the HTML string corresponding to the current slide\r\n\t * number, including formatting.\r\n\t */\r\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet value;\r\n\t\tlet format = 'h.v';\r\n\r\n\t\tif ( typeof config.slideNumber === 'function' ) {\r\n\t\t\tvalue = config.slideNumber( slide );\r\n\t\t} else {\r\n\t\t\t// Check if a custom number format is available\r\n\t\t\tif( typeof config.slideNumber === 'string' ) {\r\n\t\t\t\tformat = config.slideNumber;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are ONLY vertical slides in this deck, always use\r\n\t\t\t// a flattened slide number\r\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\r\n\t\t\t\tformat = 'c';\r\n\t\t\t}\r\n\r\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\r\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\r\n\r\n\t\t\tvalue = [];\r\n\t\t\tswitch( format ) {\r\n\t\t\t\tcase 'c':\r\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'c/t':\r\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\r\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\r\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\r\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\r\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies HTML formatting to a slide number before it's\r\n\t * written to the DOM.\r\n\t *\r\n\t * @param {number} a Current slide\r\n\t * @param {string} delimiter Character to separate slide numbers\r\n\t * @param {(number|*)} b Total slides\r\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\r\n\t * @return {string} HTML string fragment\r\n\t */\r\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\r\n\r\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\r\n\t\t\treturn  `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\r\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\r\n\t\t\t\t\t</a>`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t</a>`;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n}","/**\r\n * Converts various color input formats to an {r:0,g:0,b:0} object.\r\n *\r\n * @param {string} color The string representation of a color\r\n * @example\r\n * colorToRgb('#000');\r\n * @example\r\n * colorToRgb('#000000');\r\n * @example\r\n * colorToRgb('rgb(0,0,0)');\r\n * @example\r\n * colorToRgb('rgba(0,0,0)');\r\n *\r\n * @return {{r: number, g: number, b: number, [a]: number}|null}\r\n */\r\nexport const colorToRgb = ( color ) => {\r\n\r\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\r\n\tif( hex3 && hex3[1] ) {\r\n\t\thex3 = hex3[1];\r\n\t\treturn {\r\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\r\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\r\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\r\n\t\t};\r\n\t}\r\n\r\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\r\n\tif( hex6 && hex6[1] ) {\r\n\t\thex6 = hex6[1];\r\n\t\treturn {\r\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\r\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\r\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\r\n\t\t};\r\n\t}\r\n\r\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\r\n\tif( rgb ) {\r\n\t\treturn {\r\n\t\t\tr: parseInt( rgb[1], 10 ),\r\n\t\t\tg: parseInt( rgb[2], 10 ),\r\n\t\t\tb: parseInt( rgb[3], 10 )\r\n\t\t};\r\n\t}\r\n\r\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\r\n\tif( rgba ) {\r\n\t\treturn {\r\n\t\t\tr: parseInt( rgba[1], 10 ),\r\n\t\t\tg: parseInt( rgba[2], 10 ),\r\n\t\t\tb: parseInt( rgba[3], 10 ),\r\n\t\t\ta: parseFloat( rgba[4] )\r\n\t\t};\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n/**\r\n * Calculates brightness on a scale of 0-255.\r\n *\r\n * @param {string} color See colorToRgb for supported formats.\r\n * @see {@link colorToRgb}\r\n */\r\nexport const colorBrightness = ( color ) => {\r\n\r\n\tif( typeof color === 'string' ) color = colorToRgb( color );\r\n\r\n\tif( color ) {\r\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}","import { queryAll } from '../utils/util.js'\r\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\r\n\r\n/**\r\n * Creates and updates slide backgrounds.\r\n */\r\nexport default class Backgrounds {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'backgrounds';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the slide background elements and appends them\r\n\t * to the background container. One element is created per\r\n\t * slide no matter if the given slide has visible background.\r\n\t */\r\n\tcreate() {\r\n\r\n\t\t// Clear prior backgrounds\r\n\t\tthis.element.innerHTML = '';\r\n\t\tthis.element.classList.add( 'no-transition' );\r\n\r\n\t\t// Iterate over all horizontal slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\r\n\r\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\r\n\r\n\t\t\t// Iterate over all vertical slides\r\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\r\n\r\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\r\n\r\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t\t// Add parallax background if specified\r\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\r\n\r\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\r\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\r\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\r\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\r\n\r\n\t\t\t// Make sure the below properties are set on the element - these properties are\r\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\r\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\r\n\t\t\t// these properties after short time delay\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\r\n\t\t\t}, 1 );\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.element.style.backgroundImage = '';\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background for the given slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @param {HTMLElement} container The element that the background\r\n\t * should be appended to\r\n\t * @return {HTMLElement} New background div\r\n\t */\r\n\tcreateBackground( slide, container ) {\r\n\r\n\t\t// Main slide background element\r\n\t\tlet element = document.createElement( 'div' );\r\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\r\n\r\n\t\t// Inner background element that wraps images/videos/iframes\r\n\t\tlet contentElement = document.createElement( 'div' );\r\n\t\tcontentElement.className = 'slide-background-content';\r\n\r\n\t\telement.appendChild( contentElement );\r\n\t\tcontainer.appendChild( element );\r\n\r\n\t\tslide.slideBackgroundElement = element;\r\n\t\tslide.slideBackgroundContentElement = contentElement;\r\n\r\n\t\t// Syncs the background to reflect all current background settings\r\n\t\tthis.sync( slide );\r\n\r\n\t\treturn element;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders all of the visual properties of a slide background\r\n\t * based on the various background attributes.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tsync( slide ) {\r\n\r\n\t\tconst element = slide.slideBackgroundElement,\r\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\r\n\r\n\t\tconst data = {\r\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\r\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\r\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\r\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\r\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\r\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\r\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\r\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\r\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\r\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\r\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\r\n\t\t};\r\n\r\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\r\n\r\n\t\t// Reset the prior background state in case this is not the\r\n\t\t// initial sync\r\n\t\tslide.classList.remove( 'has-dark-background' );\r\n\t\tslide.classList.remove( 'has-light-background' );\r\n\r\n\t\telement.removeAttribute( 'data-loaded' );\r\n\t\telement.removeAttribute( 'data-background-hash' );\r\n\t\telement.removeAttribute( 'data-background-size' );\r\n\t\telement.removeAttribute( 'data-background-transition' );\r\n\t\telement.style.backgroundColor = '';\r\n\r\n\t\tcontentElement.style.backgroundSize = '';\r\n\t\tcontentElement.style.backgroundRepeat = '';\r\n\t\tcontentElement.style.backgroundPosition = '';\r\n\t\tcontentElement.style.backgroundImage = '';\r\n\t\tcontentElement.style.opacity = '';\r\n\t\tcontentElement.innerHTML = '';\r\n\r\n\t\tif( data.background ) {\r\n\t\t\t// Auto-wrap image urls in url(...)\r\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\r\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.style.background = data.background;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create a hash for this combination of background settings.\r\n\t\t// This is used to determine when two slide backgrounds are\r\n\t\t// the same.\r\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\r\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\r\n\t\t}\r\n\r\n\t\t// Additional and optional background properties\r\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\r\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\r\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\r\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\r\n\r\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\r\n\r\n\t\t// Background image options are set on the content wrapper\r\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\r\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\r\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\r\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\r\n\r\n\t\t// If this slide has a background color, we add a class that\r\n\t\t// signals if it is light or dark. If the slide has no background\r\n\t\t// color, no class will be added\r\n\t\tlet contrastColor = data.backgroundColor;\r\n\r\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\r\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\r\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\r\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\r\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( contrastColor ) {\r\n\t\t\tconst rgb = colorToRgb( contrastColor );\r\n\r\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\r\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\r\n\t\t\t// an element with no background\r\n\t\t\tif( rgb && rgb.a !== 0 ) {\r\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\r\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the background elements to reflect the current\r\n\t * slide.\r\n\t *\r\n\t * @param {boolean} includeAll If true, the backgrounds of\r\n\t * all vertical slides (not just the present) will be updated.\r\n\t */\r\n\tupdate( includeAll = false ) {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\tlet currentBackground = null;\r\n\r\n\t\t// Reverse past/future classes when in RTL mode\r\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\r\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\r\n\r\n\t\t// Update the classes of all backgrounds to match the\r\n\t\t// states of their slides (past/present/future)\r\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\r\n\r\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\tif( h < indices.h ) {\r\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\r\n\t\t\t}\r\n\t\t\telse if ( h > indices.h ) {\r\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackgroundh.classList.add( 'present' );\r\n\r\n\t\t\t\t// Store a reference to the current background element\r\n\t\t\t\tcurrentBackground = backgroundh;\r\n\t\t\t}\r\n\r\n\t\t\tif( includeAll || h === indices.h ) {\r\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\r\n\r\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\t\t\tif( v < indices.v ) {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ( v > indices.v ) {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\r\n\r\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\r\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\t// Stop content inside of previous backgrounds\r\n\t\tif( this.previousBackground ) {\r\n\r\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\r\n\r\n\t\t}\r\n\r\n\t\t// Start content in the current background\r\n\t\tif( currentBackground ) {\r\n\r\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\r\n\r\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\r\n\t\t\tif( currentBackgroundContent ) {\r\n\r\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\r\n\r\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\r\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\r\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Don't transition between identical backgrounds. This\r\n\t\t\t// prevents unwanted flicker.\r\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\r\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\r\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\r\n\t\t\t\tthis.element.classList.add( 'no-transition' );\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousBackground = currentBackground;\r\n\r\n\t\t}\r\n\r\n\t\t// If there's a background brightness flag for this slide,\r\n\t\t// bubble it to the .reveal container\r\n\t\tif( currentSlide ) {\r\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\r\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\r\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\r\n\t\t\t\t}\r\n\t\t\t}, this );\r\n\t\t}\r\n\r\n\t\t// Allow the first background to apply without transition\r\n\t\tsetTimeout( () => {\r\n\t\t\tthis.element.classList.remove( 'no-transition' );\r\n\t\t}, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the position of the parallax background based\r\n\t * on the current slide index.\r\n\t */\r\n\tupdateParallax() {\r\n\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\r\n\r\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\r\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\r\n\r\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\r\n\t\t\t\tbackgroundWidth, backgroundHeight;\r\n\r\n\t\t\tif( backgroundSize.length === 1 ) {\r\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\r\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\r\n\t\t\t}\r\n\r\n\t\t\tlet slideWidth = this.element.offsetWidth,\r\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\r\n\t\t\t\thorizontalOffsetMultiplier,\r\n\t\t\t\thorizontalOffset;\r\n\r\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\r\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\r\n\t\t\t}\r\n\r\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\r\n\r\n\t\t\tlet slideHeight = this.element.offsetHeight,\r\n\t\t\t\tverticalSlideCount = verticalSlides.length,\r\n\t\t\t\tverticalOffsetMultiplier,\r\n\t\t\t\tverticalOffset;\r\n\r\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\r\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\r\n\t\t\t}\r\n\r\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\r\n\r\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n}\r\n","\r\nexport const SLIDES_SELECTOR = '.slides section';\r\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\r\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\r\n\r\n// Methods that may not be invoked via the postMessage API\r\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\r\n\r\n// Regex for retrieving the fragment style from a class attribute\r\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\r\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\r\n\r\n// Counter used to generate unique IDs for auto-animated elements\r\nlet autoAnimateCounter = 0;\r\n\r\n/**\r\n * Automatically animates matching elements across\r\n * slides with the [data-auto-animate] attribute.\r\n */\r\nexport default class AutoAnimate {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Runs an auto-animation between the given slides.\r\n\t *\r\n\t * @param  {HTMLElement} fromSlide\r\n\t * @param  {HTMLElement} toSlide\r\n\t */\r\n\trun( fromSlide, toSlide ) {\r\n\r\n\t\t// Clean up after prior animations\r\n\t\tthis.reset();\r\n\r\n\t\tlet allSlides = this.Reveal.getSlides();\r\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\r\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\r\n\r\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\r\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\r\n\t\t// physically latter slide (independent of slide direction)\r\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\r\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \r\n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\r\n\r\n\t\t\t// Create a new auto-animate sheet\r\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\r\n\r\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\r\n\r\n\t\t\t// Set our starting state\r\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\r\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\r\n\r\n\t\t\t// Flag the navigation direction, needed for fragment buildup\r\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\r\n\r\n\t\t\t// If the from-slide is hidden because it has moved outside\r\n\t\t\t// the view distance, we need to temporarily show it while\r\n\t\t\t// measuring\r\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\r\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\r\n\r\n\t\t\t// Inject our auto-animate styles for this transition\r\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\r\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\r\n\t\t\t} );\r\n\r\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\r\n\r\n\t\t\t// Animate unmatched elements, if enabled\r\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\r\n\r\n\t\t\t\t// Our default timings for unmatched elements\r\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\r\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\r\n\r\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\r\n\r\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\r\n\t\t\t\t\tlet id = 'unmatched';\r\n\r\n\t\t\t\t\t// If there is a duration or delay set specifically for this\r\n\t\t\t\t\t// element our unmatched elements should adhere to those\r\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\r\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\r\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\r\n\r\n\t\t\t\t}, this );\r\n\r\n\t\t\t\t// Our default transition for unmatched elements\r\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Setting the whole chunk of CSS at once is the most\r\n\t\t\t// efficient way to do this. Using sheet.insertRule\r\n\t\t\t// is multiple factors slower.\r\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\r\n\r\n\t\t\t// Start the animation next cycle\r\n\t\t\trequestAnimationFrame( () => {\r\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\r\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\r\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\r\n\r\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'autoanimate',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tfromSlide,\r\n\t\t\t\t\ttoSlide,\r\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rolls back all changes that we've made to the DOM so\r\n\t * that as part of animating.\r\n\t */\r\n\treset() {\r\n\r\n\t\t// Reset slides\r\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\r\n\t\t\telement.dataset.autoAnimate = '';\r\n\t\t} );\r\n\r\n\t\t// Reset elements\r\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\r\n\t\t\tdelete element.dataset.autoAnimateTarget;\r\n\t\t} );\r\n\r\n\t\t// Remove the animation sheet\r\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\r\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\r\n\t\t\tthis.autoAnimateStyleSheet = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a FLIP animation where the `to` element starts out\r\n\t * in the `from` element position and animates to its original\r\n\t * state.\r\n\t *\r\n\t * @param {HTMLElement} from\r\n\t * @param {HTMLElement} to\r\n\t * @param {Object} elementOptions Options for this element pair\r\n\t * @param {Object} animationOptions Options set at the slide level\r\n\t * @param {String} id Unique ID that we can use to identify this\r\n\t * auto-animate element in the DOM\r\n\t */\r\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\r\n\r\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\r\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\r\n\t\tfrom.dataset.autoAnimateTarget = '';\r\n\t\tto.dataset.autoAnimateTarget = id;\r\n\r\n\t\t// Each element may override any of the auto-animate options\r\n\t\t// like transition easing, duration and delay via data-attributes\r\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\r\n\r\n\t\t// If we're using a custom element matcher the element options\r\n\t\t// may contain additional transition overrides\r\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\r\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\r\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\r\n\r\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\r\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\r\n\r\n\t\t// Maintain fragment visibility for matching elements when\r\n\t\t// we're navigating forwards, this way the viewer won't need\r\n\t\t// to step through the same fragments twice\r\n\t\tif( to.classList.contains( 'fragment' ) ) {\r\n\r\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\r\n\t\t\t// conflicts with fragment animations\r\n\t\t\tdelete toProps.styles['opacity'];\r\n\r\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\r\n\r\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\r\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\r\n\r\n\t\t\t\t// Only skip the fragment if the fragment animation style\r\n\t\t\t\t// remains unchanged\r\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\r\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If translation and/or scaling are enabled, css transform\r\n\t\t// the 'to' element so that it matches the position and size\r\n\t\t// of the 'from' element\r\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\r\n\r\n\t\t\tlet presentationScale = this.Reveal.getScale();\r\n\r\n\t\t\tlet delta = {\r\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\r\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\r\n\t\t\t\tscaleX: fromProps.width / toProps.width,\r\n\t\t\t\tscaleY: fromProps.height / toProps.height\r\n\t\t\t};\r\n\r\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\r\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\r\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\r\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\r\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\r\n\r\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\r\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\r\n\r\n\t\t\t// No need to transform if nothing's changed\r\n\t\t\tif( translate || scale ) {\r\n\r\n\t\t\t\tlet transform = [];\r\n\r\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\r\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\r\n\r\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\r\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\r\n\r\n\t\t\t\ttoProps.styles['transform'] = 'none';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Delete all unchanged 'to' styles\r\n\t\tfor( let propertyName in toProps.styles ) {\r\n\t\t\tconst toValue = toProps.styles[propertyName];\r\n\t\t\tconst fromValue = fromProps.styles[propertyName];\r\n\r\n\t\t\tif( toValue === fromValue ) {\r\n\t\t\t\tdelete toProps.styles[propertyName];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// If these property values were set via a custom matcher providing\r\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\r\n\t\t\t\tif( toValue.explicitValue === true ) {\r\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( fromValue.explicitValue === true ) {\r\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet css = '';\r\n\r\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\r\n\r\n\t\t// Only create animate this element IF at least one style\r\n\t\t// property has changed\r\n\t\tif( toStyleProperties.length > 0 ) {\r\n\r\n\t\t\t// Instantly move to the 'from' state\r\n\t\t\tfromProps.styles['transition'] = 'none';\r\n\r\n\t\t\t// Animate towards the 'to' state\r\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\r\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\r\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\r\n\r\n\t\t\t// Build up our custom CSS. We need to override inline styles\r\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\r\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\r\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\r\n\t\t\t} ).join( '' );\r\n\r\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\r\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\r\n\t\t\t} ).join( '' );\r\n\r\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\r\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\r\n\r\n\t\t}\r\n\r\n\t\treturn css;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the auto-animate options for the given element.\r\n\t *\r\n\t * @param {HTMLElement} element Element to pick up options\r\n\t * from, either a slide or an animation target\r\n\t * @param {Object} [inheritedOptions] Optional set of existing\r\n\t * options\r\n\t */\r\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\r\n\r\n\t\tlet options = {\r\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\r\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\r\n\t\t\tdelay: 0\r\n\t\t};\r\n\r\n\t\toptions = extend( options, inheritedOptions );\r\n\r\n\t\t// Inherit options from parent elements\r\n\t\tif( element.parentNode ) {\r\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\r\n\t\t\tif( autoAnimatedParent ) {\r\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateEasing ) {\r\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateDuration ) {\r\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateDelay ) {\r\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\r\n\t\t}\r\n\r\n\t\treturn options;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object containing all of the properties\r\n\t * that can be auto-animated for the given element and\r\n\t * their current computed values.\r\n\t *\r\n\t * @param {String} direction 'from' or 'to'\r\n\t */\r\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\tlet properties = { styles: [] };\r\n\r\n\t\t// Position and size\r\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\r\n\t\t\tlet bounds;\r\n\r\n\t\t\t// Custom auto-animate may optionally return a custom tailored\r\n\t\t\t// measurement function\r\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\r\n\t\t\t\tbounds = elementOptions.measure( element );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( config.center ) {\r\n\t\t\t\t\t// More precise, but breaks when used in combination\r\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\r\n\t\t\t\t\tbounds = element.getBoundingClientRect();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet scale = this.Reveal.getScale();\r\n\t\t\t\t\tbounds = {\r\n\t\t\t\t\t\tx: element.offsetLeft * scale,\r\n\t\t\t\t\t\ty: element.offsetTop * scale,\r\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\r\n\t\t\t\t\t\theight: element.offsetHeight * scale\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tproperties.x = bounds.x;\r\n\t\t\tproperties.y = bounds.y;\r\n\t\t\tproperties.width = bounds.width;\r\n\t\t\tproperties.height = bounds.height;\r\n\t\t}\r\n\r\n\t\tconst computedStyles = getComputedStyle( element );\r\n\r\n\t\t// CSS styles\r\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\r\n\t\t\tlet value;\r\n\r\n\t\t\t// `style` is either the property name directly, or an object\r\n\t\t\t// definition of a style property\r\n\t\t\tif( typeof style === 'string' ) style = { property: style };\r\n\r\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\r\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\r\n\t\t\t}\r\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\r\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\r\n\t\t\t\tif( style.property === 'line-height' ) {\r\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( isNaN(value) ) {\r\n\t\t\t\t\tvalue = computedStyles[style.property];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif( value !== '' ) {\r\n\t\t\t\tproperties.styles[style.property] = value;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn properties;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of all element pairs that we can animate\r\n\t * between the given slides.\r\n\t *\r\n\t * @param {HTMLElement} fromSlide\r\n\t * @param {HTMLElement} toSlide\r\n\t *\r\n\t * @return {Array} Each value is an array where [0] is\r\n\t * the element we're animating from and [1] is the\r\n\t * element we're animating to\r\n\t */\r\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\r\n\r\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\r\n\r\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\r\n\r\n\t\tlet reserved = [];\r\n\r\n\t\t// Remove duplicate pairs\r\n\t\treturn pairs.filter( ( pair, index ) => {\r\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\r\n\t\t\t\treserved.push( pair.to );\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Identifies matching elements between slides.\r\n\t *\r\n\t * You can specify a custom matcher function by using\r\n\t * the `autoAnimateMatcher` config option.\r\n\t */\r\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\r\n\r\n\t\tlet pairs = [];\r\n\r\n\t\tconst codeNodes = 'pre';\r\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\r\n\t\tconst mediaNodes = 'img, video, iframe';\r\n\r\n\t\t// Eplicit matches via data-id\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\r\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\r\n\t\t} );\r\n\r\n\t\t// Text\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + node.innerText;\r\n\t\t} );\r\n\r\n\t\t// Media\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\r\n\t\t} );\r\n\r\n\t\t// Code\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + node.innerText;\r\n\t\t} );\r\n\r\n\t\tpairs.forEach( pair => {\r\n\t\t\t// Disable scale transformations on text nodes, we transition\r\n\t\t\t// each individual text property instead\r\n\t\t\tif( matches( pair.from, textNodes ) ) {\r\n\t\t\t\tpair.options = { scale: false };\r\n\t\t\t}\r\n\t\t\t// Animate individual lines of code\r\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\r\n\r\n\t\t\t\t// Transition the code block's width and height instead of scaling\r\n\t\t\t\t// to prevent its content from being squished\r\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\r\n\r\n\t\t\t\t// Lines of code\r\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\r\n\t\t\t\t\treturn node.textContent;\r\n\t\t\t\t}, {\r\n\t\t\t\t\tscale: false,\r\n\t\t\t\t\tstyles: [],\r\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Line numbers\r\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\r\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\r\n\t\t\t\t}, {\r\n\t\t\t\t\tscale: false,\r\n\t\t\t\t\tstyles: [ 'width' ],\r\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, this );\r\n\r\n\t\treturn pairs;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method which returns a bounding box based on\r\n\t * the given elements offset coordinates.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t * @return {Object} x, y, width, height\r\n\t */\r\n\tgetLocalBoundingBox( element ) {\r\n\r\n\t\tconst presentationScale = this.Reveal.getScale();\r\n\r\n\t\treturn {\r\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\r\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\r\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\r\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds matching elements between two slides.\r\n\t *\r\n\t * @param {Array} pairs            \tList of pairs to push matches to\r\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\r\n\t * @param {HTMLElement} toScope     Scope within the to element exists\r\n\t * @param {String} selector         CSS selector of the element to match\r\n\t * @param {Function} serializer     A function that accepts an element and returns\r\n\t *                                  a stringified ID based on its contents\r\n\t * @param {Object} animationOptions Optional config options for this pair\r\n\t */\r\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\r\n\r\n\t\tlet fromMatches = {};\r\n\t\tlet toMatches = {};\r\n\r\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\r\n\t\t\tconst key = serializer( element );\r\n\t\t\tif( typeof key === 'string' && key.length ) {\r\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\r\n\t\t\t\tfromMatches[key].push( element );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\r\n\t\t\tconst key = serializer( element );\r\n\t\t\ttoMatches[key] = toMatches[key] || [];\r\n\t\t\ttoMatches[key].push( element );\r\n\r\n\t\t\tlet fromElement;\r\n\r\n\t\t\t// Retrieve the 'from' element\r\n\t\t\tif( fromMatches[key] ) {\r\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\r\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\r\n\r\n\t\t\t\t// If there are multiple identical from elements, retrieve\r\n\t\t\t\t// the one at the same index as our to-element.\r\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\r\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\r\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\r\n\t\t\t\t}\r\n\t\t\t\t// If there are no matching from-elements at the same index,\r\n\t\t\t\t// use the last one.\r\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\r\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\r\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If we've got a matching pair, push it to the list of pairs\r\n\t\t\tif( fromElement ) {\r\n\t\t\t\tpairs.push({\r\n\t\t\t\t\tfrom: fromElement,\r\n\t\t\t\t\tto: element,\r\n\t\t\t\t\toptions: animationOptions\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a all elements within the given scope that should\r\n\t * be considered unmatched in an auto-animate transition. If\r\n\t * fading of unmatched elements is turned on, these elements\r\n\t * will fade when going between auto-animate slides.\r\n\t *\r\n\t * Note that parents of auto-animate targets are NOT considerd\r\n\t * unmatched since fading them would break the auto-animation.\r\n\t *\r\n\t * @param {HTMLElement} rootElement\r\n\t * @return {Array}\r\n\t */\r\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\r\n\r\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\r\n\r\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\r\n\r\n\t\t\t// The element is unmatched if\r\n\t\t\t// - It is not an auto-animate target\r\n\t\t\t// - It does not contain any auto-animate targets\r\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\r\n\t\t\t\tresult.push( element );\r\n\t\t\t}\r\n\r\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\r\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}, [] );\r\n\r\n\t}\r\n\r\n}\r\n","import { extend, queryAll } from '../utils/util.js'\r\n\r\n/**\r\n * Handles sorting and navigation of slide fragments.\r\n * Fragments are elements within a slide that are\r\n * revealed/animated incrementally.\r\n */\r\nexport default class Fragments {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.fragments === false ) {\r\n\t\t\tthis.disable();\r\n\t\t}\r\n\t\telse if( oldConfig.fragments === false ) {\r\n\t\t\tthis.enable();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If fragments are disabled in the deck, they should all be\r\n\t * visible rather than stepped through.\r\n\t */\r\n\tdisable() {\r\n\r\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\r\n\t\t\telement.classList.add( 'visible' );\r\n\t\t\telement.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reverse of #disable(). Only called if fragments have\r\n\t * previously been disabled.\r\n\t */\r\n\tenable() {\r\n\r\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\r\n\t\t\telement.classList.remove( 'visible' );\r\n\t\t\telement.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object describing the available fragment\r\n\t * directions.\r\n\t *\r\n\t * @return {{prev: boolean, next: boolean}}\r\n\t */\r\n\tavailableRoutes() {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\r\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\r\n\r\n\t\t\treturn {\r\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\r\n\t\t\t\tnext: !!hiddenFragments.length\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { prev: false, next: false };\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return a sorted fragments list, ordered by an increasing\r\n\t * \"data-fragment-index\" attribute.\r\n\t *\r\n\t * Fragments will be revealed in the order that they are returned by\r\n\t * this function, so you can use the index attributes to control the\r\n\t * order of fragment appearance.\r\n\t *\r\n\t * To maintain a sensible default fragment order, fragments are presumed\r\n\t * to be passed in document order. This function adds a \"fragment-index\"\r\n\t * attribute to each node if such an attribute is not already present,\r\n\t * and sets that attribute to an integer value which is the position of\r\n\t * the fragment within the fragments list.\r\n\t *\r\n\t * @param {object[]|*} fragments\r\n\t * @param {boolean} grouped If true the returned array will contain\r\n\t * nested arrays for all fragments with the same index\r\n\t * @return {object[]} sorted Sorted array of fragments\r\n\t */\r\n\tsort( fragments, grouped = false ) {\r\n\r\n\t\tfragments = Array.from( fragments );\r\n\r\n\t\tlet ordered = [],\r\n\t\t\tunordered = [],\r\n\t\t\tsorted = [];\r\n\r\n\t\t// Group ordered and unordered elements\r\n\t\tfragments.forEach( fragment => {\r\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\r\n\r\n\t\t\t\tif( !ordered[index] ) {\r\n\t\t\t\t\tordered[index] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tordered[index].push( fragment );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tunordered.push( [ fragment ] );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Append fragments without explicit indices in their\r\n\t\t// DOM order\r\n\t\tordered = ordered.concat( unordered );\r\n\r\n\t\t// Manually count the index up per group to ensure there\r\n\t\t// are no gaps\r\n\t\tlet index = 0;\r\n\r\n\t\t// Push all fragments in their sorted order to an array,\r\n\t\t// this flattens the groups\r\n\t\tordered.forEach( group => {\r\n\t\t\tgroup.forEach( fragment => {\r\n\t\t\t\tsorted.push( fragment );\r\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\r\n\t\t\t} );\r\n\r\n\t\t\tindex ++;\r\n\t\t} );\r\n\r\n\t\treturn grouped === true ? ordered : sorted;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sorts and formats all of fragments in the\r\n\t * presentation.\r\n\t */\r\n\tsortAll() {\r\n\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\r\n\r\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\r\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\r\n\r\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t\t}, this );\r\n\r\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the fragments on the current slide so that they\r\n\t * have the appropriate classes (.visible + .current-fragment).\r\n\t *\r\n\t * @param {number} [index] The index of the current fragment\r\n\t * @param {array} [fragments] Array containing all fragments\r\n\t * in the current slide\r\n\t *\r\n\t * @return {{shown: array, hidden: array}}\r\n\t */\r\n\tupdate( index, fragments ) {\r\n\r\n\t\tlet changedFragments = {\r\n\t\t\tshown: [],\r\n\t\t\thidden: []\r\n\t\t};\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\r\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t\tif( fragments.length ) {\r\n\r\n\t\t\t\tlet maxIndex = 0;\r\n\r\n\t\t\t\tif( typeof index !== 'number' ) {\r\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\r\n\t\t\t\t\tif( currentFragment ) {\r\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\r\n\r\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\r\n\r\n\t\t\t\t\t// Visible fragments\r\n\t\t\t\t\tif( i <= index ) {\r\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\r\n\t\t\t\t\t\tel.classList.add( 'visible' );\r\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\r\n\r\n\t\t\t\t\t\tif( i === index ) {\r\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\r\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\r\n\r\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\r\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif( !wasVisible ) {\r\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: 'visible',\r\n\t\t\t\t\t\t\t\tbubbles: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Hidden fragments\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\r\n\t\t\t\t\t\tel.classList.remove( 'visible' );\r\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\r\n\r\n\t\t\t\t\t\tif( wasVisible ) {\r\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\r\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: 'hidden',\r\n\t\t\t\t\t\t\t\tbubbles: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Write the current fragment index to the slide <section>.\r\n\t\t\t\t// This can be used by end users to apply styles based on\r\n\t\t\t\t// the current fragment index.\r\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\r\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\r\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn changedFragments;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the fragments on the given slide so that they have\r\n\t * valid indices. Call this if fragments are changed in the DOM\r\n\t * after reveal.js has already initialized.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @return {Array} a list of the HTML fragments that were synced\r\n\t */\r\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the specified slide fragment.\r\n\t *\r\n\t * @param {?number} index The index of the fragment that\r\n\t * should be shown, -1 means all are invisible\r\n\t * @param {number} offset Integer offset to apply to the\r\n\t * fragment index\r\n\t *\r\n\t * @return {boolean} true if a change was made in any\r\n\t * fragments visibility as part of this call\r\n\t */\r\n\tgoto( index, offset = 0 ) {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\r\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\r\n\t\t\tif( fragments.length ) {\r\n\r\n\t\t\t\t// If no index is specified, find the current\r\n\t\t\t\tif( typeof index !== 'number' ) {\r\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\r\n\r\n\t\t\t\t\tif( lastVisibleFragment ) {\r\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tindex = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply the offset if there is one\r\n\t\t\t\tindex += offset;\r\n\r\n\t\t\t\tlet changedFragments = this.update( index, fragments );\r\n\r\n\t\t\t\tif( changedFragments.hidden.length ) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'fragmenthidden',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( changedFragments.shown.length ) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'fragmentshown',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.shown\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.Reveal.controls.update();\r\n\t\t\t\tthis.Reveal.progress.update();\r\n\r\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\r\n\t\t\t\t\tthis.Reveal.location.writeURL();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the next slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a next fragment,\r\n\t * false otherwise\r\n\t */\r\n\tnext() {\r\n\r\n\t\treturn this.goto( null, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the previous slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a previous fragment,\r\n\t * false otherwise\r\n\t */\r\n\tprev() {\r\n\r\n\t\treturn this.goto( null, -1 );\r\n\r\n\t}\r\n\r\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { extend, queryAll, transformElement } from '../utils/util.js'\r\n\r\n/**\r\n * Handles all logic related to the overview mode\r\n * (birds-eye view of all slides).\r\n */\r\nexport default class Overview {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.active = false;\r\n\r\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Displays the overview of slides (quick nav) by scaling\r\n\t * down and arranging all slide elements.\r\n\t */\r\n\tactivate() {\r\n\r\n\t\t// Only proceed if enabled in config\r\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\r\n\r\n\t\t\tthis.active = true;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\r\n\r\n\t\t\t// Don't auto-slide while in overview mode\r\n\t\t\tthis.Reveal.cancelAutoSlide();\r\n\r\n\t\t\t// Move the backgrounds element into the slide container to\r\n\t\t\t// that the same scaling is applied\r\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\r\n\r\n\t\t\t// Clicking on an overview slide navigates to it\r\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\r\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Calculate slide sizes\r\n\t\t\tconst margin = 70;\r\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\r\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\r\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\r\n\r\n\t\t\t// Reverse in RTL mode\r\n\t\t\tif( this.Reveal.getConfig().rtl ) {\r\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis.Reveal.updateSlidesVisibility();\r\n\r\n\t\t\tthis.layout();\r\n\t\t\tthis.update();\r\n\r\n\t\t\tthis.Reveal.layout();\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Notify observers of the overview showing\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'overviewshown',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t'indexh': indices.h,\r\n\t\t\t\t\t'indexv': indices.v,\r\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Uses CSS transforms to position all slides in a grid for\r\n\t * display inside of the overview mode.\r\n\t */\r\n\tlayout() {\r\n\r\n\t\t// Layout slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\r\n\t\t\thslide.setAttribute( 'data-index-h', h );\r\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\r\n\r\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\r\n\r\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\r\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\r\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\r\n\r\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Layout slide backgrounds\r\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\r\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\r\n\r\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\r\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the overview viewport to the current slides.\r\n\t * Called each time the current slide changes.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\r\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\r\n\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\tthis.Reveal.transformSlides( {\r\n\t\t\toverview: [\r\n\t\t\t\t'scale('+ scale +')',\r\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\r\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\r\n\t\t\t].join( ' ' )\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Exits the slide overview and enters the currently\r\n\t * active slide.\r\n\t */\r\n\tdeactivate() {\r\n\r\n\t\t// Only proceed if enabled in config\r\n\t\tif( this.Reveal.getConfig().overview ) {\r\n\r\n\t\t\tthis.active = false;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\r\n\r\n\t\t\t// Temporarily add a class so that transitions can do different things\r\n\t\t\t// depending on whether they are exiting/entering overview, or just\r\n\t\t\t// moving from slide to slide\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\r\n\t\t\t}, 1 );\r\n\r\n\t\t\t// Move the background element back out\r\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\r\n\r\n\t\t\t// Clean up changes made to slides\r\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\r\n\t\t\t\ttransformElement( slide, '' );\r\n\r\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\r\n\t\t\t} );\r\n\r\n\t\t\t// Clean up changes made to backgrounds\r\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\r\n\t\t\t\ttransformElement( background, '' );\r\n\t\t\t} );\r\n\r\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\r\n\t\t\tthis.Reveal.layout();\r\n\t\t\tthis.Reveal.cueAutoSlide();\r\n\r\n\t\t\t// Notify observers of the overview hiding\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'overviewhidden',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t'indexh': indices.h,\r\n\t\t\t\t\t'indexv': indices.v,\r\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the slide overview mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * overview is open, false means it's closed.\r\n\t */\r\n\ttoggle( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? this.activate() : this.deactivate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the overview is currently active.\r\n\t *\r\n\t * @return {Boolean} true if the overview is active,\r\n\t * false otherwise\r\n\t */\r\n\tisActive() {\r\n\r\n\t\treturn this.active;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when a slide is and we're in the overview.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonSlideClicked( event ) {\r\n\r\n\t\tif( this.isActive() ) {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tlet element = event.target;\r\n\r\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\r\n\r\n\t\t\t\tthis.deactivate();\r\n\r\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\r\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\r\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\r\n\r\n\t\t\t\t\tthis.Reveal.slide( h, v );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","import { enterFullscreen } from '../utils/util.js'\r\n\r\n/**\r\n * Handles all reveal.js keyboard interactions.\r\n */\r\nexport default class Keyboard {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// A key:value map of keyboard keys and descriptions of\r\n\t\t// the actions they trigger\r\n\t\tthis.shortcuts = {};\r\n\r\n\t\t// Holds custom key code mappings\r\n\t\tthis.bindings = {};\r\n\r\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\r\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\r\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\r\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\r\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\r\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\r\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\r\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\r\n\t\t}\r\n\r\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\r\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\r\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\r\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\r\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts listening for keyboard events.\r\n\t */\r\n\tbind() {\r\n\r\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\r\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stops listening for keyboard events.\r\n\t */\r\n\tunbind() {\r\n\r\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\r\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Add a custom key binding with optional description to\r\n\t * be added to the help screen.\r\n\t */\r\n\taddKeyBinding( binding, callback ) {\r\n\r\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\r\n\t\t\tthis.bindings[binding.keyCode] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: binding.key,\r\n\t\t\t\tdescription: binding.description\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.bindings[binding] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: null,\r\n\t\t\t\tdescription: null\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified custom key binding.\r\n\t */\r\n\tremoveKeyBinding( keyCode ) {\r\n\r\n\t\tdelete this.bindings[keyCode];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Programmatically triggers a keyboard event\r\n\t *\r\n\t * @param {int} keyCode\r\n\t */\r\n\ttriggerKey( keyCode ) {\r\n\r\n\t\tthis.onDocumentKeyDown( { keyCode } );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new shortcut to include in the help overlay\r\n\t *\r\n\t * @param {String} key\r\n\t * @param {String} value\r\n\t */\r\n\tregisterKeyboardShortcut( key, value ) {\r\n\r\n\t\tthis.shortcuts[key] = value;\r\n\r\n\t}\r\n\r\n\tgetShortcuts() {\r\n\r\n\t\treturn this.shortcuts;\r\n\r\n\t}\r\n\r\n\tgetBindings() {\r\n\r\n\t\treturn this.bindings;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'keypress' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentKeyPress( event ) {\r\n\r\n\t\t// Check if the pressed key is question mark\r\n\t\tif( event.shiftKey && event.charCode === 63 ) {\r\n\t\t\tthis.Reveal.toggleHelp();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'keydown' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentKeyDown( event ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\t// If there's a condition specified and it returns false,\r\n\t\t// ignore this event\r\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// If keyboardCondition is set, only capture keyboard events\r\n\t\t// for embedded decks when they are focused\r\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Shorthand\r\n\t\tlet keyCode = event.keyCode;\r\n\r\n\t\t// Remember if auto-sliding was paused so we can toggle it\r\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\r\n\r\n\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\t// Is there a focused element that could be using the keyboard?\r\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\r\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\r\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\r\n\r\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\r\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\r\n\r\n\t\t// Prevent all other events when a modifier is pressed\r\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\r\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\r\n\r\n\t\t// Disregard the event if there's a focused element or a\r\n\t\t// keyboard modifier key is present\r\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\r\n\r\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\r\n\t\tlet resumeKeyCodes = [66,86,190,191];\r\n\t\tlet key;\r\n\r\n\t\t// Custom key bindings for togglePause should be able to resume\r\n\t\tif( typeof config.keyboard === 'object' ) {\r\n\t\t\tfor( key in config.keyboard ) {\r\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\r\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Use linear navigation if we're configured to OR if\r\n\t\t// the presentation is one-dimensional\r\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\r\n\r\n\t\tlet triggered = false;\r\n\r\n\t\t// 1. User defined key bindings\r\n\t\tif( typeof config.keyboard === 'object' ) {\r\n\r\n\t\t\tfor( key in config.keyboard ) {\r\n\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\r\n\r\n\t\t\t\t\tlet value = config.keyboard[ key ];\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif( typeof value === 'function' ) {\r\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\r\n\t\t\t\t\t\tthis.Reveal[ value ].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// 2. Registered custom key bindings\r\n\t\tif( triggered === false ) {\r\n\r\n\t\t\tfor( key in this.bindings ) {\r\n\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\r\n\r\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif( typeof action === 'function' ) {\r\n\t\t\t\t\t\taction.apply( null, [ event ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\r\n\t\t\t\t\t\tthis.Reveal[ action ].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 3. System defined key bindings\r\n\t\tif( triggered === false ) {\r\n\r\n\t\t\t// Assume true and try to prove false\r\n\t\t\ttriggered = true;\r\n\r\n\t\t\t// P, PAGE UP\r\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\r\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t}\r\n\t\t\t// N, PAGE DOWN\r\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\r\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t}\r\n\t\t\t// H, LEFT\r\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( 0 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// L, RIGHT\r\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// K, UP\r\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// J, DOWN\r\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// HOME\r\n\t\t\telse if( keyCode === 36 ) {\r\n\t\t\t\tthis.Reveal.slide( 0 );\r\n\t\t\t}\r\n\t\t\t// END\r\n\t\t\telse if( keyCode === 35 ) {\r\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\r\n\t\t\t}\r\n\t\t\t// SPACE\r\n\t\t\telse if( keyCode === 32 ) {\r\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\r\n\t\t\t\t\tthis.Reveal.overview.deactivate();\r\n\t\t\t\t}\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\r\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\r\n\t\t\t\tthis.Reveal.togglePause();\r\n\t\t\t}\r\n\t\t\t// F\r\n\t\t\telse if( keyCode === 70 ) {\r\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\r\n\t\t\t}\r\n\t\t\t// A\r\n\t\t\telse if( keyCode === 65 ) {\r\n\t\t\t\tif ( config.autoSlideStoppable ) {\r\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttriggered = false;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If the input resulted in a triggered action we should prevent\r\n\t\t// the browsers default behavior\r\n\t\tif( triggered ) {\r\n\t\t\tevent.preventDefault && event.preventDefault();\r\n\t\t}\r\n\t\t// ESC or O key\r\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\r\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\r\n\t\t\t\tthis.Reveal.overview.toggle();\r\n\t\t\t}\r\n\r\n\t\t\tevent.preventDefault && event.preventDefault();\r\n\t\t}\r\n\r\n\t\t// If auto-sliding is enabled we need to cue up\r\n\t\t// another timeout\r\n\t\tthis.Reveal.cueAutoSlide();\r\n\r\n\t}\r\n\r\n}","/**\r\n * Reads and writes the URL based on reveal.js' current state.\r\n */\r\nexport default class Location {\r\n\r\n\t// The minimum number of milliseconds that must pass between\r\n\t// calls to history.replaceState\r\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\r\n\t\tthis.writeURLTimeout = 0;\r\n\r\n\t\tthis.replaceStateTimestamp = 0;\r\n\r\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the slide indices for the given hash link.\r\n\t *\r\n\t * @param {string} [hash] the hash string that we want to\r\n\t * find the indices for\r\n\t *\r\n\t * @returns slide indices or null\r\n\t */\r\n\tgetIndicesFromHash( hash=window.location.hash ) {\r\n\r\n\t\t// Attempt to parse the hash as either an index or name\r\n\t\tlet name = hash.replace( /^#\\/?/, '' );\r\n\t\tlet bits = name.split( '/' );\r\n\r\n\t\t// If the first bit is not fully numeric and there is a name we\r\n\t\t// can assume that this is a named link\r\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\r\n\t\t\tlet element;\r\n\r\n\t\t\tlet f;\r\n\r\n\t\t\t// Parse named links with fragments (#/named-link/2)\r\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\r\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\r\n\t\t\t\tf = isNaN(f) ? undefined : f;\r\n\t\t\t\tname = name.split( '/' ).shift();\r\n\t\t\t}\r\n\r\n\t\t\t// Ensure the named link is a valid HTML ID attribute\r\n\t\t\ttry {\r\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\r\n\t\t\t}\r\n\t\t\tcatch ( error ) { }\r\n\r\n\t\t\tif( element ) {\r\n\t\t\t\treturn { ...this.Reveal.getIndices( element ), f };\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst config = this.Reveal.getConfig();\r\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\r\n\r\n\t\t\t// Read the index components of the hash\r\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\r\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\r\n\t\t\t\tf;\r\n\r\n\t\t\tif( config.fragmentInURL ) {\r\n\t\t\t\tf = parseInt( bits[2], 10 );\r\n\t\t\t\tif( isNaN( f ) ) {\r\n\t\t\t\t\tf = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn { h, v, f };\r\n\t\t}\r\n\r\n\t\t// The hash couldn't be parsed or no matching named link was found\r\n\t\treturn null\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the current URL (hash) and navigates accordingly.\r\n\t */\r\n\treadURL() {\r\n\r\n\t\tconst currentIndices = this.Reveal.getIndices();\r\n\t\tconst newIndices = this.getIndicesFromHash();\r\n\r\n\t\tif( newIndices ) {\r\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\r\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If no new indices are available, we're trying to navigate to\r\n\t\t// a slide hash that does not exist\r\n\t\telse {\r\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the page URL (hash) to reflect the current\r\n\t * state.\r\n\t *\r\n\t * @param {number} delay The time in ms to wait before\r\n\t * writing the hash\r\n\t */\r\n\twriteURL( delay ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\r\n\t\t// Make sure there's never more than one timeout running\r\n\t\tclearTimeout( this.writeURLTimeout );\r\n\r\n\t\t// If a delay is specified, timeout this call\r\n\t\tif( typeof delay === 'number' ) {\r\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\r\n\t\t}\r\n\t\telse if( currentSlide ) {\r\n\r\n\t\t\tlet hash = this.getHash();\r\n\r\n\t\t\t// If we're configured to push to history OR the history\r\n\t\t\t// API is not avaialble.\r\n\t\t\tif( config.history ) {\r\n\t\t\t\twindow.location.hash = hash;\r\n\t\t\t}\r\n\t\t\t// If we're configured to reflect the current slide in the\r\n\t\t\t// URL without pushing to history.\r\n\t\t\telse if( config.hash ) {\r\n\t\t\t\t// If the hash is empty, don't add it to the URL\r\n\t\t\t\tif( hash === '/' ) {\r\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\r\n\t\t\t// anchors on pages where reveal.js is running. Removed\r\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\r\n\t\t\t//\r\n\t\t\t// If history and hash are both disabled, a hash may still\r\n\t\t\t// be added to the URL by clicking on a href with a hash\r\n\t\t\t// target. Counter this by always removing the hash.\r\n\t\t\t// else {\r\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\r\n\t\t\t// }\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treplaceState( url ) {\r\n\r\n\t\twindow.history.replaceState( null, null, url );\r\n\t\tthis.replaceStateTimestamp = Date.now();\r\n\r\n\t}\r\n\r\n\tdebouncedReplaceState( url ) {\r\n\r\n\t\tclearTimeout( this.replaceStateTimeout );\r\n\r\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\r\n\t\t\tthis.replaceState( url );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return a hash URL that will resolve to the given slide location.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\r\n\t */\r\n\tgetHash( slide ) {\r\n\r\n\t\tlet url = '/';\r\n\r\n\t\t// Attempt to create a named link based on the slide's ID\r\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\r\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\r\n\t\tif( id ) {\r\n\t\t\tid = encodeURIComponent( id );\r\n\t\t}\r\n\r\n\t\tlet index = this.Reveal.getIndices( slide );\r\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\r\n\t\t\tindex.f = undefined;\r\n\t\t}\r\n\r\n\t\t// If the current slide has an ID, use that as a named link,\r\n\t\t// but we don't support named links with a fragment index\r\n\t\tif( typeof id === 'string' && id.length ) {\r\n\t\t\turl = '/' + id;\r\n\r\n\t\t\t// If there is also a fragment, append that at the end\r\n\t\t\t// of the named link, like: #/named-link/2\r\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\r\n\t\t}\r\n\t\t// Otherwise use the /h/v index\r\n\t\telse {\r\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\r\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\r\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\r\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'hashchange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tonWindowHashChange( event ) {\r\n\r\n\t\tthis.readURL();\r\n\r\n\t}\r\n\r\n}","import { queryAll } from '../utils/util.js'\r\nimport { isAndroid } from '../utils/device.js'\r\n\r\n/**\r\n * Manages our presentation controls. This includes both\r\n * the built-in control arrows as well as event monitoring\r\n * of any elements within the presentation with either of the\r\n * following helper classes:\r\n * - .navigate-up\r\n * - .navigate-right\r\n * - .navigate-down\r\n * - .navigate-left\r\n * - .navigate-next\r\n * - .navigate-prev\r\n */\r\nexport default class Controls {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\r\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\r\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\r\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\r\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\r\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst rtl = this.Reveal.getConfig().rtl;\r\n\t\tconst revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tthis.element = document.createElement( 'aside' );\r\n\t\tthis.element.className = 'controls';\r\n\t\tthis.element.innerHTML =\r\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\r\n\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t\t// There can be multiple instances of controls throughout the page\r\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\r\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\r\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\r\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\r\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\r\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\r\n\r\n\t\t// The left, right and down arrows in the standard reveal.js controls\r\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\r\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\r\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\r\n\r\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\r\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\t// Listen to both touch and click events, in case the device\r\n\t\t// supports both\r\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\r\n\r\n\t\t// Only support touch for Android, fixes double navigations in\r\n\t\t// stock browser\r\n\t\tif( isAndroid ) {\r\n\t\t\tpointerEvents = [ 'touchstart' ];\r\n\t\t}\r\n\r\n\t\tpointerEvents.forEach( eventName => {\r\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\r\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\r\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\r\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\r\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\r\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\r\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\r\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\r\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\r\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\r\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\r\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the state of all control/navigation arrows.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tlet routes = this.Reveal.availableRoutes();\r\n\r\n\t\t// Remove the 'enabled' class from all directions\r\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\r\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\r\n\r\n\t\t\t// Set 'disabled' attribute on all directions\r\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\r\n\t\t} );\r\n\r\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\r\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t// Prev/next buttons\r\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t// Highlight fragment directions\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide ) {\r\n\r\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\r\n\r\n\t\t\t// Always apply fragment decorator to prev/next buttons\r\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t\t// Apply fragment decorators to directional buttons based on\r\n\t\t\t// what slide axis they are in\r\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\r\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\r\n\r\n\t\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Highlight control arrows with an animation to ensure\r\n\t\t\t// that the viewer knows how to navigate\r\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\r\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\r\n\r\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\r\n\r\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.unbind();\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Event handlers for navigation control buttons.\r\n\t */\r\n\tonNavigateLeftClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\r\n\t\t\tthis.Reveal.prev();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.left();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonNavigateRightClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\r\n\t\t\tthis.Reveal.next();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.right();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonNavigateUpClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.up();\r\n\r\n\t}\r\n\r\n\tonNavigateDownClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.down();\r\n\r\n\t}\r\n\r\n\tonNavigatePrevClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.prev();\r\n\r\n\t}\r\n\r\n\tonNavigateNextClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.next();\r\n\r\n\t}\r\n\r\n\r\n}","/**\r\n * Creates a visual progress bar for the presentation.\r\n */\r\nexport default class Progress {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'progress';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t\tthis.bar = document.createElement( 'span' );\r\n\t\tthis.element.appendChild( this.bar );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\r\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\r\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the progress bar to reflect the current slide.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\t// Update progress if enabled\r\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\r\n\r\n\t\t\tlet scale = this.Reveal.getProgress();\r\n\r\n\t\t\t// Don't fill the progress bar if there's only one slide\r\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\r\n\t\t\t\tscale = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetMaxWidth() {\r\n\r\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clicking on the progress bar results in a navigation to the\r\n\t * closest approximate horizontal slide using this equation:\r\n\t *\r\n\t * ( clickX / presentationWidth ) * numberOfSlides\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonProgressClicked( event ) {\r\n\r\n\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet slides = this.Reveal.getSlides();\r\n\t\tlet slidesTotal = slides.length;\r\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\r\n\r\n\t\tif( this.Reveal.getConfig().rtl ) {\r\n\t\t\tslideIndex = slidesTotal - slideIndex;\r\n\t\t}\r\n\r\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\r\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n}","/**\r\n * Handles hiding of the pointer/cursor when inactive.\r\n */\r\nexport default class Pointer {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Throttles mouse wheel navigation\r\n\t\tthis.lastMouseWheelStep = 0;\r\n\r\n\t\t// Is the mouse pointer currently hidden from view\r\n\t\tthis.cursorHidden = false;\r\n\r\n\t\t// Timeout used to determine when the cursor is inactive\r\n\t\tthis.cursorInactiveTimeout = 0;\r\n\r\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\r\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.mouseWheel ) {\r\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\r\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\r\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\r\n\t\t}\r\n\r\n\t\t// Auto-hide the mouse pointer when its inactive\r\n\t\tif( config.hideInactiveCursor ) {\r\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.showCursor();\r\n\r\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the mouse pointer after it has been hidden with\r\n\t * #hideCursor.\r\n\t */\r\n\tshowCursor() {\r\n\r\n\t\tif( this.cursorHidden ) {\r\n\t\t\tthis.cursorHidden = false;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the mouse pointer when it's on top of the .reveal\r\n\t * container.\r\n\t */\r\n\thideCursor() {\r\n\r\n\t\tif( this.cursorHidden === false ) {\r\n\t\t\tthis.cursorHidden = true;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.showCursor();\r\n\r\n\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false );\r\n\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\r\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called whenever there is mouse input at the document level\r\n\t * to determine if the cursor is active or not.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentCursorActive( event ) {\r\n\r\n\t\tthis.showCursor();\r\n\r\n\t\tclearTimeout( this.cursorInactiveTimeout );\r\n\r\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\r\n\t * multiple slides.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentMouseScroll( event ) {\r\n\r\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\r\n\r\n\t\t\tthis.lastMouseWheelStep = Date.now();\r\n\r\n\t\t\tlet delta = event.detail || -event.wheelDelta;\r\n\t\t\tif( delta > 0 ) {\r\n\t\t\t\tthis.Reveal.next();\r\n\t\t\t}\r\n\t\t\telse if( delta < 0 ) {\r\n\t\t\t\tthis.Reveal.prev();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Loads a JavaScript file from the given URL and executes it.\r\n *\r\n * @param {string} url Address of the .js file to load\r\n * @param {function} callback Method to invoke when the script\r\n * has loaded and executed\r\n */\r\nexport const loadScript = ( url, callback ) => {\r\n\r\n\tconst script = document.createElement( 'script' );\r\n\tscript.type = 'text/javascript';\r\n\tscript.async = false;\r\n\tscript.defer = false;\r\n\tscript.src = url;\r\n\r\n\tif( typeof callback === 'function' ) {\r\n\r\n\t\t// Success callback\r\n\t\tscript.onload = script.onreadystatechange = event => {\r\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\r\n\r\n\t\t\t\t// Kill event listeners\r\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\t\tcallback();\r\n\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Error callback\r\n\t\tscript.onerror = err => {\r\n\r\n\t\t\t// Kill event listeners\r\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// Append the script at the end of <head>\r\n\tconst head = document.querySelector( 'head' );\r\n\thead.insertBefore( script, head.lastChild );\r\n\r\n}","import { loadScript } from '../utils/loader.js'\r\n\r\n/**\r\n * Manages loading and registering of reveal.js plugins.\r\n */\r\nexport default class Plugins {\r\n\r\n\tconstructor( reveal ) {\r\n\r\n\t\tthis.Reveal = reveal;\r\n\r\n\t\t// Flags our current state (idle -> loading -> loaded)\r\n\t\tthis.state = 'idle';\r\n\r\n\t\t// An id:instance map of currently registed plugins\r\n\t\tthis.registeredPlugins = {};\r\n\r\n\t\tthis.asyncDependencies = [];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads reveal.js dependencies, registers and\r\n\t * initializes plugins.\r\n\t *\r\n\t * Plugins are direct references to a reveal.js plugin\r\n\t * object that we register and initialize after any\r\n\t * synchronous dependencies have loaded.\r\n\t *\r\n\t * Dependencies are defined via the 'dependencies' config\r\n\t * option and will be loaded prior to starting reveal.js.\r\n\t * Some dependencies may have an 'async' flag, if so they\r\n\t * will load after reveal.js has been started up.\r\n\t */\r\n\tload( plugins, dependencies ) {\r\n\r\n\t\tthis.state = 'loading';\r\n\r\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\r\n\r\n\t\treturn new Promise( resolve => {\r\n\r\n\t\t\tlet scripts = [],\r\n\t\t\t\tscriptsToLoad = 0;\r\n\r\n\t\t\tdependencies.forEach( s => {\r\n\t\t\t\t// Load if there's no condition or the condition is truthy\r\n\t\t\t\tif( !s.condition || s.condition() ) {\r\n\t\t\t\t\tif( s.async ) {\r\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tscripts.push( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tif( scripts.length ) {\r\n\t\t\t\tscriptsToLoad = scripts.length;\r\n\r\n\t\t\t\tconst scriptLoadedCallback = (s) => {\r\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\r\n\r\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\r\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Load synchronous scripts\r\n\t\t\t\tscripts.forEach( s => {\r\n\t\t\t\t\tif( typeof s.id === 'string' ) {\r\n\t\t\t\t\t\tthis.registerPlugin( s );\r\n\t\t\t\t\t\tscriptLoadedCallback( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\r\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\r\n\t\t\t\t\t\tscriptLoadedCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.initPlugins().then( resolve );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes our plugins and waits for them to be ready\r\n\t * before proceeding.\r\n\t */\r\n\tinitPlugins() {\r\n\r\n\t\treturn new Promise( resolve => {\r\n\r\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\r\n\t\t\tlet pluginsToInitialize = pluginValues.length;\r\n\r\n\t\t\t// If there are no plugins, skip this step\r\n\t\t\tif( pluginsToInitialize === 0 ) {\r\n\t\t\t\tthis.loadAsync().then( resolve );\r\n\t\t\t}\r\n\t\t\t// ... otherwise initialize plugins\r\n\t\t\telse {\r\n\r\n\t\t\t\tlet initNextPlugin;\r\n\r\n\t\t\t\tlet afterPlugInitialized = () => {\r\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\r\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinitNextPlugin();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet i = 0;\r\n\r\n\t\t\t\t// Initialize plugins serially\r\n\t\t\t\tinitNextPlugin = () => {\r\n\r\n\t\t\t\t\tlet plugin = pluginValues[i++];\r\n\r\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\r\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\r\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\r\n\r\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\r\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\r\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinitNextPlugin();\r\n\r\n\t\t\t}\r\n\r\n\t\t} )\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads all async reveal.js dependencies.\r\n\t */\r\n\tloadAsync() {\r\n\r\n\t\tthis.state = 'loaded';\r\n\r\n\t\tif( this.asyncDependencies.length ) {\r\n\t\t\tthis.asyncDependencies.forEach( s => {\r\n\t\t\t\tloadScript( s.src, s.callback );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new plugin with this reveal.js instance.\r\n\t *\r\n\t * reveal.js waits for all regisered plugins to initialize\r\n\t * before considering itself ready, as long as the plugin\r\n\t * is registered before calling `Reveal.initialize()`.\r\n\t */\r\n\tregisterPlugin( plugin ) {\r\n\r\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\r\n\t\t// plugins work with reveal.js 4.0.0\r\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\r\n\t\t\tplugin = arguments[1];\r\n\t\t\tplugin.id = arguments[0];\r\n\t\t}\r\n\t\t// Plugin can optionally be a function which we call\r\n\t\t// to create an instance of the plugin\r\n\t\telse if( typeof plugin === 'function' ) {\r\n\t\t\tplugin = plugin();\r\n\t\t}\r\n\r\n\t\tlet id = plugin.id;\r\n\r\n\t\tif( typeof id !== 'string' ) {\r\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\r\n\t\t}\r\n\t\telse if( this.registeredPlugins[id] === undefined ) {\r\n\t\t\tthis.registeredPlugins[id] = plugin;\r\n\r\n\t\t\t// If a plugin is registered after reveal.js is loaded,\r\n\t\t\t// initialize it right away\r\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\r\n\t\t\t\tplugin.init( this.Reveal );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a specific plugin has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\thasPlugin( id ) {\r\n\r\n\t\treturn !!this.registeredPlugins[id];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the specific plugin instance, if a plugin\r\n\t * with the given ID has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\tgetPlugin( id ) {\r\n\r\n\t\treturn this.registeredPlugins[id];\r\n\r\n\t}\r\n\r\n\tgetRegisteredPlugins() {\r\n\r\n\t\treturn this.registeredPlugins;\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\r\n\t\t\tif( typeof plugin.destroy === 'function' ) {\r\n\t\t\t\tplugin.destroy();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.registeredPlugins = {};\r\n\t\tthis.asyncDependencies = [];\r\n\r\n\t}\r\n\r\n}\r\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { queryAll, createStyleSheet } from '../utils/util.js'\r\n\r\n/**\r\n * Setups up our presentation for printing/exporting to PDF.\r\n */\r\nexport default class Print {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Configures the presentation for printing to a static\r\n\t * PDF.\r\n\t */\r\n\tasync setupPDF() {\r\n\r\n\t\tconst config = this.Reveal.getConfig();\r\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\r\n\r\n\t\t// Compute slide numbers now, before we start duplicating slides\r\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\r\n\r\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\r\n\r\n\t\t// Dimensions of the PDF pages\r\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\r\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\r\n\r\n\t\t// Dimensions of slides within the pages\r\n\t\tconst slideWidth = slideSize.width,\r\n\t\t\tslideHeight = slideSize.height;\r\n\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\r\n\t\t// Let the browser know what page size we want to print\r\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\r\n\r\n\t\t// Limit the size of certain elements to the dimensions of the slide\r\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\r\n\r\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\r\n\t\tdocument.body.style.width = pageWidth + 'px';\r\n\t\tdocument.body.style.height = pageHeight + 'px';\r\n\r\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\r\n\t\tlet presentationBackground;\r\n\t\tif( viewportElement ) {\r\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\r\n\t\t\tif( viewportStyles && viewportStyles.background ) {\r\n\t\t\t\tpresentationBackground = viewportStyles.background;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Make sure stretch elements fit on slide\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\r\n\r\n\t\t// Batch scrollHeight access to prevent layout thrashing\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\r\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\r\n\r\n\t\tconst pages = [];\r\n\t\tconst pageContainer = slides[0].parentNode;\r\n\t\tlet slideNumber = 1;\r\n\r\n\t\t// Slide and slide background layout\r\n\t\tslides.forEach( function( slide, index ) {\r\n\r\n\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t// children will be\r\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\r\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\r\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\r\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\r\n\r\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\r\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\r\n\r\n\t\t\t\t// Adhere to configured pages per slide limit\r\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\r\n\r\n\t\t\t\t// Center slides vertically\r\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\r\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\r\n\t\t\t\t// so that no page ever flows onto another\r\n\t\t\t\tconst page = document.createElement( 'div' );\r\n\t\t\t\tpages.push( page );\r\n\r\n\t\t\t\tpage.className = 'pdf-page';\r\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\r\n\r\n\t\t\t\t// Copy the presentation-wide background to each individual\r\n\t\t\t\t// page when printing\r\n\t\t\t\tif( presentationBackground ) {\r\n\t\t\t\t\tpage.style.background = presentationBackground;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpage.appendChild( slide );\r\n\r\n\t\t\t\t// Position the slide inside of the page\r\n\t\t\t\tslide.style.left = left + 'px';\r\n\t\t\t\tslide.style.top = top + 'px';\r\n\t\t\t\tslide.style.width = slideWidth + 'px';\r\n\r\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\r\n\r\n\t\t\t\tif( slide.slideBackgroundElement ) {\r\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject notes if `showNotes` is enabled\r\n\t\t\t\tif( config.showNotes ) {\r\n\r\n\t\t\t\t\t// Are there notes for this slide?\r\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\r\n\t\t\t\t\tif( notes ) {\r\n\r\n\t\t\t\t\t\tconst notesSpacing = 8;\r\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\r\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\r\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\r\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\r\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\r\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\r\n\r\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\r\n\t\t\t\t\t\t\tpages.push( notesElement );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\r\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\r\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\r\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\r\n\t\t\t\tif( injectPageNumbers ) {\r\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\r\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\r\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\r\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\r\n\t\t\t\t\tpage.appendChild( numberElement );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy page and show fragments one after another\r\n\t\t\t\tif( config.pdfSeparateFragments ) {\r\n\r\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\r\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\r\n\t\t\t\t\t// are part of the same group.\r\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\r\n\r\n\t\t\t\t\tlet previousFragmentStep;\r\n\r\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\r\n\r\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\r\n\t\t\t\t\t\tif( previousFragmentStep ) {\r\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Show the fragments for the current index\r\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t}, this );\r\n\r\n\t\t\t\t\t\t// Create a separate page for the current fragment state\r\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\r\n\r\n\t\t\t\t\t\t// Inject unique page numbers for fragments\r\n\t\t\t\t\t\tif( injectPageNumbers ) {\r\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\r\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\r\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpages.push( clonedPage );\r\n\r\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\r\n\r\n\t\t\t\t\t}, this );\r\n\r\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\r\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\r\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// Show all fragments\r\n\t\t\t\telse {\r\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\r\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}, this );\r\n\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\r\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\r\n\r\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\r\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\r\n\r\n\t\t// Notify subscribers that the PDF layout is good to go\r\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this instance is being used to print a PDF.\r\n\t */\r\n\tisPrintingPDF() {\r\n\r\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\r\n\r\n\t}\r\n\r\n}\r\n","import { isAndroid } from '../utils/device.js'\r\nimport { matches } from '../utils/util.js'\r\n\r\nconst SWIPE_THRESHOLD = 40;\r\n\r\n/**\r\n * Controls all touch interactions and navigations for\r\n * a presentation.\r\n */\r\nexport default class Touch {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Holds information about the currently ongoing touch interaction\r\n\t\tthis.touchStartX = 0;\r\n\t\tthis.touchStartY = 0;\r\n\t\tthis.touchStartCount = 0;\r\n\t\tthis.touchCaptured = false;\r\n\r\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\r\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\r\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\r\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\r\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\r\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tbind() {\r\n\r\n\t\tlet revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tif( 'onpointerdown' in window ) {\r\n\t\t\t// Use W3C pointer events\r\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\r\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\r\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\r\n\t\t}\r\n\t\telse if( window.navigator.msPointerEnabled ) {\r\n\t\t\t// IE 10 uses prefixed version of pointer events\r\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\r\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\r\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Fall back to touch events\r\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\r\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\r\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tunbind() {\r\n\r\n\t\tlet revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\r\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\r\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\r\n\r\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\r\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\r\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\r\n\r\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\r\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\r\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the target element prevents the triggering of\r\n\t * swipe navigation.\r\n\t */\r\n\tisSwipePrevented( target ) {\r\n\r\n\t\t// Prevent accidental swipes when scrubbing timelines\r\n\t\tif( matches( target, 'video, audio' ) ) return true;\r\n\r\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\r\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\r\n\t\t\ttarget = target.parentNode;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchstart' event, enables support for\r\n\t * swipe and pinch gestures.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchStart( event ) {\r\n\r\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\r\n\r\n\t\tthis.touchStartX = event.touches[0].clientX;\r\n\t\tthis.touchStartY = event.touches[0].clientY;\r\n\t\tthis.touchStartCount = event.touches.length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchmove' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchMove( event ) {\r\n\r\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\t// Each touch should only trigger one action\r\n\t\tif( !this.touchCaptured ) {\r\n\t\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\t\tlet currentX = event.touches[0].clientX;\r\n\t\t\tlet currentY = event.touches[0].clientY;\r\n\r\n\t\t\t// There was only one touch point, look for a swipe\r\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\r\n\r\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\r\n\r\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\r\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\r\n\r\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.left();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.right();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.up();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.down();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're embedded, only block touch events if they have\r\n\t\t\t\t// triggered an action\r\n\t\t\t\tif( config.embedded ) {\r\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\r\n\t\t\t\t// around of the viewport in iOS\r\n\t\t\t\telse {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t// There's a bug with swiping on some Android devices unless\r\n\t\t// the default action is always prevented\r\n\t\telse if( isAndroid ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchend' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchEnd( event ) {\r\n\r\n\t\tthis.touchCaptured = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer down to touch start.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerDown( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchStart( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer move to touch move.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerMove( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchMove( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer up to touch end.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerUp( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchEnd( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","import { closest } from '../utils/util.js'\r\n\r\n/**\r\n * Manages focus when a presentation is embedded. This\r\n * helps us only capture keyboard from the presentation\r\n * a user is currently interacting with in a page where\r\n * multiple presentations are embedded.\r\n */\r\n\r\nconst STATE_FOCUS = 'focus';\r\nconst STATE_BLUR = 'blur';\r\n\r\nexport default class Focus {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\r\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.embedded ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.focus();\r\n\t\t\tthis.unbind();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tif( this.Reveal.getConfig().embedded ) {\r\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\r\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\r\n\t}\r\n\r\n\tfocus() {\r\n\r\n\t\tif( this.state !== STATE_FOCUS ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\r\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_FOCUS;\r\n\r\n\t}\r\n\r\n\tblur() {\r\n\r\n\t\tif( this.state !== STATE_BLUR ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\r\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_BLUR;\r\n\r\n\t}\r\n\r\n\tisFocused() {\r\n\r\n\t\treturn this.state === STATE_FOCUS;\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\r\n\r\n\t}\r\n\r\n\tonRevealPointerDown( event ) {\r\n\r\n\t\tthis.focus();\r\n\r\n\t}\r\n\r\n\tonDocumentPointerDown( event ) {\r\n\r\n\t\tlet revealElement = closest( event.target, '.reveal' );\r\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Handles the showing of speaker notes\r\n */\r\nexport default class Notes {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'speaker-notes';\r\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\r\n\t\tthis.element.setAttribute( 'tabindex', '0' );\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.showNotes ) {\r\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Pick up notes from the current slide and display them\r\n\t * to the viewer.\r\n\t *\r\n\t * @see {@link config.showNotes}\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\r\n\r\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the visibility of the speaker notes sidebar that\r\n\t * is used to share annotated slides. The notes sidebar is\r\n\t * only visible if showNotes is true and there are notes on\r\n\t * one or more slides in the deck.\r\n\t */\r\n\tupdateVisibility() {\r\n\r\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there are speaker notes for ANY slide in the\r\n\t * presentation.\r\n\t */\r\n\thasNotes() {\r\n\r\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this presentation is running inside of the\r\n\t * speaker notes window.\r\n\t *\r\n\t * @return {boolean}\r\n\t */\r\n\tisSpeakerNotesWindow() {\r\n\r\n\t\treturn !!window.location.search.match( /receiver/gi );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the speaker notes from a slide. Notes can be\r\n\t * defined in two ways:\r\n\t * 1. As a data-notes attribute on the slide <section>\r\n\t * 2. With <aside class=\"notes\"> elements inside the slide\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide]\r\n\t * @return {(string|null)}\r\n\t */\r\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\t// Notes can be specified via the data-notes attribute...\r\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\r\n\t\t\treturn slide.getAttribute( 'data-notes' );\r\n\t\t}\r\n\r\n\t\t// ... or using <aside class=\"notes\"> elements\r\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\r\n\t\tif( notesElements ) {\r\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n}","/**\r\n * UI component that lets the use control auto-slide\r\n * playback via play/pause.\r\n */\r\nexport default class Playback {\r\n\r\n\t/**\r\n\t * @param {HTMLElement} container The component will append\r\n\t * itself to this\r\n\t * @param {function} progressCheck A method which will be\r\n\t * called frequently to get the current playback progress on\r\n\t * a range of 0-1\r\n\t */\r\n\tconstructor( container, progressCheck ) {\r\n\r\n\t\t// Cosmetics\r\n\t\tthis.diameter = 100;\r\n\t\tthis.diameter2 = this.diameter/2;\r\n\t\tthis.thickness = 6;\r\n\r\n\t\t// Flags if we are currently playing\r\n\t\tthis.playing = false;\r\n\r\n\t\t// Current progress on a 0-1 range\r\n\t\tthis.progress = 0;\r\n\r\n\t\t// Used to loop the animation smoothly\r\n\t\tthis.progressOffset = 1;\r\n\r\n\t\tthis.container = container;\r\n\t\tthis.progressCheck = progressCheck;\r\n\r\n\t\tthis.canvas = document.createElement( 'canvas' );\r\n\t\tthis.canvas.className = 'playback';\r\n\t\tthis.canvas.width = this.diameter;\r\n\t\tthis.canvas.height = this.diameter;\r\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\r\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\r\n\t\tthis.context = this.canvas.getContext( '2d' );\r\n\r\n\t\tthis.container.appendChild( this.canvas );\r\n\r\n\t\tthis.render();\r\n\r\n\t}\r\n\r\n\tsetPlaying( value ) {\r\n\r\n\t\tconst wasPlaying = this.playing;\r\n\r\n\t\tthis.playing = value;\r\n\r\n\t\t// Start repainting if we weren't already\r\n\t\tif( !wasPlaying && this.playing ) {\r\n\t\t\tthis.animate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tanimate() {\r\n\r\n\t\tconst progressBefore = this.progress;\r\n\r\n\t\tthis.progress = this.progressCheck();\r\n\r\n\t\t// When we loop, offset the progress so that it eases\r\n\t\t// smoothly rather than immediately resetting\r\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\r\n\t\t\tthis.progressOffset = this.progress;\r\n\t\t}\r\n\r\n\t\tthis.render();\r\n\r\n\t\tif( this.playing ) {\r\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the current progress and playback state.\r\n\t */\r\n\trender() {\r\n\r\n\t\tlet progress = this.playing ? this.progress : 0,\r\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\r\n\t\t\tx = this.diameter2,\r\n\t\t\ty = this.diameter2,\r\n\t\t\ticonSize = 28;\r\n\r\n\t\t// Ease towards 1\r\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\r\n\r\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\r\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\r\n\r\n\t\tthis.context.save();\r\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\r\n\r\n\t\t// Solid background color\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\r\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\r\n\t\tthis.context.fill();\r\n\r\n\t\t// Draw progress track\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\r\n\t\tthis.context.lineWidth = this.thickness;\r\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\r\n\t\tthis.context.stroke();\r\n\r\n\t\tif( this.playing ) {\r\n\t\t\t// Draw progress on top of track\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\r\n\t\t\tthis.context.lineWidth = this.thickness;\r\n\t\t\tthis.context.strokeStyle = '#fff';\r\n\t\t\tthis.context.stroke();\r\n\t\t}\r\n\r\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\r\n\r\n\t\t// Draw play/pause icons\r\n\t\tif( this.playing ) {\r\n\t\t\tthis.context.fillStyle = '#fff';\r\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\r\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.translate( 4, 0 );\r\n\t\t\tthis.context.moveTo( 0, 0 );\r\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\r\n\t\t\tthis.context.lineTo( 0, iconSize );\r\n\t\t\tthis.context.fillStyle = '#fff';\r\n\t\t\tthis.context.fill();\r\n\t\t}\r\n\r\n\t\tthis.context.restore();\r\n\r\n\t}\r\n\r\n\ton( type, listener ) {\r\n\t\tthis.canvas.addEventListener( type, listener, false );\r\n\t}\r\n\r\n\toff( type, listener ) {\r\n\t\tthis.canvas.removeEventListener( type, listener, false );\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.playing = false;\r\n\r\n\t\tif( this.canvas.parentNode ) {\r\n\t\t\tthis.container.removeChild( this.canvas );\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * The default reveal.js config object.\r\n */\r\nexport default {\r\n\r\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\r\n\t// when the presentation is scaled to fit different resolutions\r\n\twidth: 960,\r\n\theight: 700,\r\n\r\n\t// Factor of the display size that should remain empty around the content\r\n\tmargin: 0.04,\r\n\r\n\t// Bounds for smallest/largest possible scale to apply to content\r\n\tminScale: 0.2,\r\n\tmaxScale: 2.0,\r\n\r\n\t// Display presentation control arrows\r\n\tcontrols: true,\r\n\r\n\t// Help the user learn the controls by providing hints, for example by\r\n\t// bouncing the down arrow when they first encounter a vertical slide\r\n\tcontrolsTutorial: true,\r\n\r\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\r\n\tcontrolsLayout: 'bottom-right',\r\n\r\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\r\n\t// or \"visible\"\r\n\tcontrolsBackArrows: 'faded',\r\n\r\n\t// Display a presentation progress bar\r\n\tprogress: true,\r\n\r\n\t// Display the page number of the current slide\r\n\t// - true:    Show slide number\r\n\t// - false:   Hide slide number\r\n\t//\r\n\t// Can optionally be set as a string that specifies the number formatting:\r\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\r\n\t// - \"h/v\":\t  Horizontal / vertical slide number\r\n\t// - \"c\":\t  Flattened slide number\r\n\t// - \"c/t\":\t  Flattened slide number / total slides\r\n\t//\r\n\t// Alternatively, you can provide a function that returns the slide\r\n\t// number for the current slide. The function should take in a slide\r\n\t// object and return an array with one string [slideNumber] or\r\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\r\n\tslideNumber: false,\r\n\r\n\t// Can be used to limit the contexts in which the slide number appears\r\n\t// - \"all\":      Always show the slide number\r\n\t// - \"print\":    Only when printing to PDF\r\n\t// - \"speaker\":  Only in the speaker view\r\n\tshowSlideNumber: 'all',\r\n\r\n\t// Use 1 based indexing for # links to match slide number (default is zero\r\n\t// based)\r\n\thashOneBasedIndex: false,\r\n\r\n\t// Add the current slide number to the URL hash so that reloading the\r\n\t// page/copying the URL will return you to the same slide\r\n\thash: false,\r\n\r\n\t// Flags if we should monitor the hash and change slides accordingly\r\n\trespondToHashChanges: true,\r\n\r\n\t// Push each slide change to the browser history.  Implies `hash: true`\r\n\thistory: false,\r\n\r\n\t// Enable keyboard shortcuts for navigation\r\n\tkeyboard: true,\r\n\r\n\t// Optional function that blocks keyboard events when retuning false\r\n\t//\r\n\t// If you set this to 'focused', we will only capture keyboard events\r\n\t// for embedded decks when they are in focus\r\n\tkeyboardCondition: null,\r\n\r\n\t// Disables the default reveal.js slide layout (scaling and centering)\r\n\t// so that you can use custom CSS layout\r\n\tdisableLayout: false,\r\n\r\n\t// Enable the slide overview mode\r\n\toverview: true,\r\n\r\n\t// Vertical centering of slides\r\n\tcenter: true,\r\n\r\n\t// Enables touch navigation on devices with touch input\r\n\ttouch: true,\r\n\r\n\t// Loop the presentation\r\n\tloop: false,\r\n\r\n\t// Change the presentation direction to be RTL\r\n\trtl: false,\r\n\r\n\t// Changes the behavior of our navigation directions.\r\n\t//\r\n\t// \"default\"\r\n\t// Left/right arrow keys step between horizontal slides, up/down\r\n\t// arrow keys step between vertical slides. Space key steps through\r\n\t// all slides (both horizontal and vertical).\r\n\t//\r\n\t// \"linear\"\r\n\t// Removes the up/down arrows. Left/right arrows step through all\r\n\t// slides (both horizontal and vertical).\r\n\t//\r\n\t// \"grid\"\r\n\t// When this is enabled, stepping left/right from a vertical stack\r\n\t// to an adjacent vertical stack will land you at the same vertical\r\n\t// index.\r\n\t//\r\n\t// Consider a deck with six slides ordered in two vertical stacks:\r\n\t// 1.1    2.1\r\n\t// 1.2    2.2\r\n\t// 1.3    2.3\r\n\t//\r\n\t// If you're on slide 1.3 and navigate right, you will normally move\r\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\r\n\t// from 1.3 -> 2.3.\r\n\tnavigationMode: 'default',\r\n\r\n\t// Randomizes the order of slides each time the presentation loads\r\n\tshuffle: false,\r\n\r\n\t// Turns fragments on and off globally\r\n\tfragments: true,\r\n\r\n\t// Flags whether to include the current fragment in the URL,\r\n\t// so that reloading brings you to the same fragment position\r\n\tfragmentInURL: true,\r\n\r\n\t// Flags if the presentation is running in an embedded mode,\r\n\t// i.e. contained within a limited portion of the screen\r\n\tembedded: false,\r\n\r\n\t// Flags if we should show a help overlay when the question-mark\r\n\t// key is pressed\r\n\thelp: true,\r\n\r\n\t// Flags if it should be possible to pause the presentation (blackout)\r\n\tpause: true,\r\n\r\n\t// Flags if speaker notes should be visible to all viewers\r\n\tshowNotes: false,\r\n\r\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\r\n\tshowHiddenSlides: false,\r\n\r\n\t// Global override for autoplaying embedded media (video/audio/iframe)\r\n\t// - null:   Media will only autoplay if data-autoplay is present\r\n\t// - true:   All media will autoplay, regardless of individual setting\r\n\t// - false:  No media will autoplay, regardless of individual setting\r\n\tautoPlayMedia: null,\r\n\r\n\t// Global override for preloading lazy-loaded iframes\r\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\r\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\r\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\r\n\t// - false:  All iframes with data-src will be loaded only when visible\r\n\tpreloadIframes: null,\r\n\r\n\t// Can be used to globally disable auto-animation\r\n\tautoAnimate: true,\r\n\r\n\t// Optionally provide a custom element matcher that will be\r\n\t// used to dictate which elements we can animate between.\r\n\tautoAnimateMatcher: null,\r\n\r\n\t// Default settings for our auto-animate transitions, can be\r\n\t// overridden per-slide or per-element via data arguments\r\n\tautoAnimateEasing: 'ease',\r\n\tautoAnimateDuration: 1.0,\r\n\tautoAnimateUnmatched: true,\r\n\r\n\t// CSS properties that can be auto-animated. Position & scale\r\n\t// is matched separately so there's no need to include styles\r\n\t// like top/right/bottom/left, width/height or margin.\r\n\tautoAnimateStyles: [\r\n\t\t'opacity',\r\n\t\t'color',\r\n\t\t'background-color',\r\n\t\t'padding',\r\n\t\t'font-size',\r\n\t\t'line-height',\r\n\t\t'letter-spacing',\r\n\t\t'border-width',\r\n\t\t'border-color',\r\n\t\t'border-radius',\r\n\t\t'outline',\r\n\t\t'outline-offset'\r\n\t],\r\n\r\n\t// Controls automatic progression to the next slide\r\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\r\n\t//           is present on the current slide or fragment\r\n\t// - 1+:     All slides will progress automatically at the given interval\r\n\t// - false:  No auto-sliding, even if data-autoslide is present\r\n\tautoSlide: 0,\r\n\r\n\t// Stop auto-sliding after user input\r\n\tautoSlideStoppable: true,\r\n\r\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\r\n\tautoSlideMethod: null,\r\n\r\n\t// Specify the average time in seconds that you think you will spend\r\n\t// presenting each slide. This is used to show a pacing timer in the\r\n\t// speaker view\r\n\tdefaultTiming: null,\r\n\r\n\t// Enable slide navigation via mouse wheel\r\n\tmouseWheel: false,\r\n\r\n\t// Opens links in an iframe preview overlay\r\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\r\n\t// individually\r\n\tpreviewLinks: false,\r\n\r\n\t// Exposes the reveal.js API through window.postMessage\r\n\tpostMessage: true,\r\n\r\n\t// Dispatches all reveal.js events to the parent window through postMessage\r\n\tpostMessageEvents: false,\r\n\r\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\r\n\tfocusBodyOnPageVisibilityChange: true,\r\n\r\n\t// Transition style\r\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\r\n\r\n\t// Transition speed\r\n\ttransitionSpeed: 'default', // default/fast/slow\r\n\r\n\t// Transition style for full page slide backgrounds\r\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\r\n\r\n\t// Parallax background image\r\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\r\n\r\n\t// Parallax background size\r\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\r\n\r\n\t// Parallax background repeat\r\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\r\n\r\n\t// Parallax background position\r\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\r\n\r\n\t// Amount of pixels to move the parallax background per slide step\r\n\tparallaxBackgroundHorizontal: null,\r\n\tparallaxBackgroundVertical: null,\r\n\r\n\t// The maximum number of pages a single slide can expand onto when printing\r\n\t// to PDF, unlimited by default\r\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\r\n\r\n\t// Prints each fragment on a separate slide\r\n\tpdfSeparateFragments: true,\r\n\r\n\t// Offset used to reduce the height of content within exported PDF pages.\r\n\t// This exists to account for environment differences based on how you\r\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\r\n\t// on precisely the total height of the document whereas in-browser\r\n\t// printing has to end one pixel before.\r\n\tpdfPageHeightOffset: -1,\r\n\r\n\t// Number of slides away from the current that are visible\r\n\tviewDistance: 3,\r\n\r\n\t// Number of slides away from the current that are visible on mobile\r\n\t// devices. It is advisable to set this to a lower number than\r\n\t// viewDistance in order to save resources.\r\n\tmobileViewDistance: 2,\r\n\r\n\t// The display mode that will be used to show slides\r\n\tdisplay: 'block',\r\n\r\n\t// Hide cursor if inactive\r\n\thideInactiveCursor: true,\r\n\r\n\t// Time before the cursor is hidden (in ms)\r\n\thideCursorTime: 5000,\r\n\r\n\t// Script dependencies to load\r\n\tdependencies: [],\r\n\r\n\t// Plugin objects to register and use for this presentation\r\n\tplugins: []\r\n\r\n}","import SlideContent from './controllers/slidecontent.js'\r\nimport SlideNumber from './controllers/slidenumber.js'\r\nimport Backgrounds from './controllers/backgrounds.js'\r\nimport AutoAnimate from './controllers/autoanimate.js'\r\nimport Fragments from './controllers/fragments.js'\r\nimport Overview from './controllers/overview.js'\r\nimport Keyboard from './controllers/keyboard.js'\r\nimport Location from './controllers/location.js'\r\nimport Controls from './controllers/controls.js'\r\nimport Progress from './controllers/progress.js'\r\nimport Pointer from './controllers/pointer.js'\r\nimport Plugins from './controllers/plugins.js'\r\nimport Print from './controllers/print.js'\r\nimport Touch from './controllers/touch.js'\r\nimport Focus from './controllers/focus.js'\r\nimport Notes from './controllers/notes.js'\r\nimport Playback from './components/playback.js'\r\nimport defaultConfig from './config.js'\r\nimport * as Util from './utils/util.js'\r\nimport * as Device from './utils/device.js'\r\nimport {\r\n\tSLIDES_SELECTOR,\r\n\tHORIZONTAL_SLIDES_SELECTOR,\r\n\tVERTICAL_SLIDES_SELECTOR,\r\n\tPOST_MESSAGE_METHOD_BLACKLIST\r\n} from './utils/constants.js'\r\n\r\n// The reveal.js version\r\nexport const VERSION = '4.4.0';\r\n\r\n/**\r\n * reveal.js\r\n * https://revealjs.com\r\n * MIT licensed\r\n *\r\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\r\n */\r\nexport default function( revealElement, options ) {\r\n\r\n\t// Support initialization with no args, one arg\r\n\t// [options] or two args [revealElement, options]\r\n\tif( arguments.length < 2 ) {\r\n\t\toptions = arguments[0];\r\n\t\trevealElement = document.querySelector( '.reveal' );\r\n\t}\r\n\r\n\tconst Reveal = {};\r\n\r\n\t// Configuration defaults, can be overridden at initialization time\r\n\tlet config = {},\r\n\r\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\r\n\t\tready = false,\r\n\r\n\t\t// The horizontal and vertical index of the currently active slide\r\n\t\tindexh,\r\n\t\tindexv,\r\n\r\n\t\t// The previous and current slide HTML elements\r\n\t\tpreviousSlide,\r\n\t\tcurrentSlide,\r\n\r\n\t\t// Remember which directions that the user has navigated towards\r\n\t\tnavigationHistory = {\r\n\t\t\thasNavigatedHorizontally: false,\r\n\t\t\thasNavigatedVertically: false\r\n\t\t},\r\n\r\n\t\t// Slides may have a data-state attribute which we pick up and apply\r\n\t\t// as a class to the body. This list contains the combined state of\r\n\t\t// all current slides.\r\n\t\tstate = [],\r\n\r\n\t\t// The current scale of the presentation (see width/height config)\r\n\t\tscale = 1,\r\n\r\n\t\t// CSS transform that is currently applied to the slides container,\r\n\t\t// split into two groups\r\n\t\tslidesTransform = { layout: '', overview: '' },\r\n\r\n\t\t// Cached references to DOM elements\r\n\t\tdom = {},\r\n\r\n\t\t// Flags if the interaction event listeners are bound\r\n\t\teventsAreBound = false,\r\n\r\n\t\t// The current slide transition state; idle or running\r\n\t\ttransition = 'idle',\r\n\r\n\t\t// The current auto-slide duration\r\n\t\tautoSlide = 0,\r\n\r\n\t\t// Auto slide properties\r\n\t\tautoSlidePlayer,\r\n\t\tautoSlideTimeout = 0,\r\n\t\tautoSlideStartTime = -1,\r\n\t\tautoSlidePaused = false,\r\n\r\n\t\t// Controllers for different aspects of our presentation. They're\r\n\t\t// all given direct references to this Reveal instance since there\r\n\t\t// may be multiple presentations running in parallel.\r\n\t\tslideContent = new SlideContent( Reveal ),\r\n\t\tslideNumber = new SlideNumber( Reveal ),\r\n\t\tautoAnimate = new AutoAnimate( Reveal ),\r\n\t\tbackgrounds = new Backgrounds( Reveal ),\r\n\t\tfragments = new Fragments( Reveal ),\r\n\t\toverview = new Overview( Reveal ),\r\n\t\tkeyboard = new Keyboard( Reveal ),\r\n\t\tlocation = new Location( Reveal ),\r\n\t\tcontrols = new Controls( Reveal ),\r\n\t\tprogress = new Progress( Reveal ),\r\n\t\tpointer = new Pointer( Reveal ),\r\n\t\tplugins = new Plugins( Reveal ),\r\n\t\tprint = new Print( Reveal ),\r\n\t\tfocus = new Focus( Reveal ),\r\n\t\ttouch = new Touch( Reveal ),\r\n\t\tnotes = new Notes( Reveal );\r\n\r\n\t/**\r\n\t * Starts up the presentation.\r\n\t */\r\n\tfunction initialize( initOptions ) {\r\n\r\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\r\n\r\n\t\t// Cache references to key DOM elements\r\n\t\tdom.wrapper = revealElement;\r\n\t\tdom.slides = revealElement.querySelector( '.slides' );\r\n\r\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\r\n\r\n\t\t// Compose our config object in order of increasing precedence:\r\n\t\t// 1. Default reveal.js options\r\n\t\t// 2. Options provided via Reveal.configure() prior to\r\n\t\t//    initialization\r\n\t\t// 3. Options passed to the Reveal constructor\r\n\t\t// 4. Options passed to Reveal.initialize\r\n\t\t// 5. Query params\r\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\r\n\r\n\t\tsetViewport();\r\n\r\n\t\t// Force a layout when the whole page, incl fonts, has loaded\r\n\t\twindow.addEventListener( 'load', layout, false );\r\n\r\n\t\t// Register plugins and load dependencies, then move on to #start()\r\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\r\n\r\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Encase the presentation in a reveal.js viewport. The\r\n\t * extent of the viewport differs based on configuration.\r\n\t */\r\n\tfunction setViewport() {\r\n\r\n\t\t// Embedded decks use the reveal element as their viewport\r\n\t\tif( config.embedded === true ) {\r\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\r\n\t\t}\r\n\t\t// Full-page decks use the body as their viewport\r\n\t\telse {\r\n\t\t\tdom.viewport = document.body;\r\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\r\n\t\t}\r\n\r\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts up reveal.js by binding input events and navigating\r\n\t * to the current URL deeplink if there is one.\r\n\t */\r\n\tfunction start() {\r\n\r\n\t\tready = true;\r\n\r\n\t\t// Remove slides hidden with data-visibility\r\n\t\tremoveHiddenSlides();\r\n\r\n\t\t// Make sure we've got all the DOM elements we need\r\n\t\tsetupDOM();\r\n\r\n\t\t// Listen to messages posted to this window\r\n\t\tsetupPostMessage();\r\n\r\n\t\t// Prevent the slides from being scrolled out of view\r\n\t\tsetupScrollPrevention();\r\n\r\n\t\t// Adds bindings for fullscreen mode\r\n\t\tsetupFullscreen();\r\n\r\n\t\t// Resets all vertical slides so that only the first is visible\r\n\t\tresetVerticalSlides();\r\n\r\n\t\t// Updates the presentation to match the current configuration values\r\n\t\tconfigure();\r\n\r\n\t\t// Read the initial hash\r\n\t\tlocation.readURL();\r\n\r\n\t\t// Create slide backgrounds\r\n\t\tbackgrounds.update( true );\r\n\r\n\t\t// Notify listeners that the presentation is ready but use a 1ms\r\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\r\n\t\tsetTimeout( () => {\r\n\t\t\t// Enable transitions now that we're loaded\r\n\t\t\tdom.slides.classList.remove( 'no-transition' );\r\n\r\n\t\t\tdom.wrapper.classList.add( 'ready' );\r\n\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'ready',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh,\r\n\t\t\t\t\tindexv,\r\n\t\t\t\t\tcurrentSlide\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, 1 );\r\n\r\n\t\t// Special setup and config is required when printing to PDF\r\n\t\tif( print.isPrintingPDF() ) {\r\n\t\t\tremoveEventListeners();\r\n\r\n\t\t\t// The document needs to have loaded for the PDF layout\r\n\t\t\t// measurements to be accurate\r\n\t\t\tif( document.readyState === 'complete' ) {\r\n\t\t\t\tprint.setupPDF();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twindow.addEventListener( 'load', () => {\r\n\t\t\t\t\tprint.setupPDF();\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all slides with data-visibility=\"hidden\". This\r\n\t * is done right before the rest of the presentation is\r\n\t * initialized.\r\n\t *\r\n\t * If you want to show all hidden slides, initialize\r\n\t * reveal.js with showHiddenSlides set to true.\r\n\t */\r\n\tfunction removeHiddenSlides() {\r\n\r\n\t\tif( !config.showHiddenSlides ) {\r\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\r\n\t\t\t\tslide.parentNode.removeChild( slide );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds and stores references to DOM elements which are\r\n\t * required by the presentation. If a required element is\r\n\t * not found, it is created.\r\n\t */\r\n\tfunction setupDOM() {\r\n\r\n\t\t// Prevent transitions while we're loading\r\n\t\tdom.slides.classList.add( 'no-transition' );\r\n\r\n\t\tif( Device.isMobile ) {\r\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\r\n\t\t}\r\n\r\n\t\tbackgrounds.render();\r\n\t\tslideNumber.render();\r\n\t\tcontrols.render();\r\n\t\tprogress.render();\r\n\t\tnotes.render();\r\n\r\n\t\t// Overlay graphic which is displayed during the paused mode\r\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\r\n\r\n\t\tdom.statusElement = createStatusElement();\r\n\r\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a hidden div with role aria-live to announce the\r\n\t * current slide content. Hide the div off-screen to make it\r\n\t * available only to Assistive Technologies.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction createStatusElement() {\r\n\r\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\r\n\t\tif( !statusElement ) {\r\n\t\t\tstatusElement = document.createElement( 'div' );\r\n\t\t\tstatusElement.style.position = 'absolute';\r\n\t\t\tstatusElement.style.height = '1px';\r\n\t\t\tstatusElement.style.width = '1px';\r\n\t\t\tstatusElement.style.overflow = 'hidden';\r\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\r\n\t\t\tstatusElement.classList.add( 'aria-status' );\r\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\r\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\r\n\t\t\tdom.wrapper.appendChild( statusElement );\r\n\t\t}\r\n\t\treturn statusElement;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Announces the given text to screen readers.\r\n\t */\r\n\tfunction announceStatus( value ) {\r\n\r\n\t\tdom.statusElement.textContent = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the given HTML element into a string of text\r\n\t * that can be announced to a screen reader. Hidden\r\n\t * elements are excluded.\r\n\t */\r\n\tfunction getStatusText( node ) {\r\n\r\n\t\tlet text = '';\r\n\r\n\t\t// Text node\r\n\t\tif( node.nodeType === 3 ) {\r\n\t\t\ttext += node.textContent;\r\n\t\t}\r\n\t\t// Element node\r\n\t\telse if( node.nodeType === 1 ) {\r\n\r\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\r\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\r\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\r\n\r\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\r\n\t\t\t\t\ttext += getStatusText( child );\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ttext = text.trim();\r\n\r\n\t\treturn text === '' ? '' : text + ' ';\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This is an unfortunate necessity. Some actions – such as\r\n\t * an input field being focused in an iframe or using the\r\n\t * keyboard to expand text selection beyond the bounds of\r\n\t * a slide – can trigger our content to be pushed out of view.\r\n\t * This scrolling can not be prevented by hiding overflow in\r\n\t * CSS (we already do) so we have to resort to repeatedly\r\n\t * checking if the slides have been offset :(\r\n\t */\r\n\tfunction setupScrollPrevention() {\r\n\r\n\t\tsetInterval( () => {\r\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\r\n\t\t\t\tdom.wrapper.scrollTop = 0;\r\n\t\t\t\tdom.wrapper.scrollLeft = 0;\r\n\t\t\t}\r\n\t\t}, 1000 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * After entering fullscreen we need to force a layout to\r\n\t * get our presentations to scale correctly. This behavior\r\n\t * is inconsistent across browsers but a force layout seems\r\n\t * to normalize it.\r\n\t */\r\n\tfunction setupFullscreen() {\r\n\r\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\r\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a listener to postMessage events, this makes it\r\n\t * possible to call all reveal.js API methods from another\r\n\t * window. For example:\r\n\t *\r\n\t * revealWindow.postMessage( JSON.stringify({\r\n\t *   method: 'slide',\r\n\t *   args: [ 2 ]\r\n\t * }), '*' );\r\n\t */\r\n\tfunction setupPostMessage() {\r\n\r\n\t\tif( config.postMessage ) {\r\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the configuration settings from the config\r\n\t * object. May be called multiple times.\r\n\t *\r\n\t * @param {object} options\r\n\t */\r\n\tfunction configure( options ) {\r\n\r\n\t\tconst oldConfig = { ...config }\r\n\r\n\t\t// New config options may be passed when this method\r\n\t\t// is invoked through the API after initialization\r\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\r\n\r\n\t\t// Abort if reveal.js hasn't finished loading, config\r\n\t\t// changes will be applied automatically once ready\r\n\t\tif( Reveal.isReady() ===  false ) return;\r\n\r\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\r\n\r\n\t\t// The transition is added as a class on the .reveal element\r\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\r\n\t\tdom.wrapper.classList.add( config.transition );\r\n\r\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\r\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\r\n\r\n\t\t// Expose our configured slide dimensions as custom props\r\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\r\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\r\n\r\n\t\tif( config.shuffle ) {\r\n\t\t\tshuffle();\r\n\t\t}\r\n\r\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\r\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\r\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\r\n\r\n\t\t// Exit the paused mode if it was configured off\r\n\t\tif( config.pause === false ) {\r\n\t\t\tresume();\r\n\t\t}\r\n\r\n\t\t// Iframe link previews\r\n\t\tif( config.previewLinks ) {\r\n\t\t\tenablePreviewLinks();\r\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdisablePreviewLinks();\r\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\r\n\t\t}\r\n\r\n\t\t// Reset all changes made by auto-animations\r\n\t\tautoAnimate.reset();\r\n\r\n\t\t// Remove existing auto-slide controls\r\n\t\tif( autoSlidePlayer ) {\r\n\t\t\tautoSlidePlayer.destroy();\r\n\t\t\tautoSlidePlayer = null;\r\n\t\t}\r\n\r\n\t\t// Generate auto-slide controls if needed\r\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\r\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\r\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\r\n\t\t\t} );\r\n\r\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\r\n\t\t\tautoSlidePaused = false;\r\n\t\t}\r\n\r\n\t\t// Add the navigation mode to the DOM so we can adjust styling\r\n\t\tif( config.navigationMode !== 'default' ) {\r\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\r\n\t\t}\r\n\r\n\t\tnotes.configure( config, oldConfig );\r\n\t\tfocus.configure( config, oldConfig );\r\n\t\tpointer.configure( config, oldConfig );\r\n\t\tcontrols.configure( config, oldConfig );\r\n\t\tprogress.configure( config, oldConfig );\r\n\t\tkeyboard.configure( config, oldConfig );\r\n\t\tfragments.configure( config, oldConfig );\r\n\t\tslideNumber.configure( config, oldConfig );\r\n\r\n\t\tsync();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Binds all event listeners.\r\n\t */\r\n\tfunction addEventListeners() {\r\n\r\n\t\teventsAreBound = true;\r\n\r\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\tif( config.touch ) touch.bind();\r\n\t\tif( config.keyboard ) keyboard.bind();\r\n\t\tif( config.progress ) progress.bind();\r\n\t\tif( config.respondToHashChanges ) location.bind();\r\n\t\tcontrols.bind();\r\n\t\tfocus.bind();\r\n\r\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\r\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\r\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\r\n\r\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\r\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds all event listeners.\r\n\t */\r\n\tfunction removeEventListeners() {\r\n\r\n\t\teventsAreBound = false;\r\n\r\n\t\ttouch.unbind();\r\n\t\tfocus.unbind();\r\n\t\tkeyboard.unbind();\r\n\t\tcontrols.unbind();\r\n\t\tprogress.unbind();\r\n\t\tlocation.unbind();\r\n\r\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\r\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\r\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Uninitializes reveal.js by undoing changes made to the\r\n\t * DOM and removing all event listeners.\r\n\t */\r\n\tfunction destroy() {\r\n\r\n\t\tremoveEventListeners();\r\n\t\tcancelAutoSlide();\r\n\t\tdisablePreviewLinks();\r\n\r\n\t\t// Destroy controllers\r\n\t\tnotes.destroy();\r\n\t\tfocus.destroy();\r\n\t\tplugins.destroy();\r\n\t\tpointer.destroy();\r\n\t\tcontrols.destroy();\r\n\t\tprogress.destroy();\r\n\t\tbackgrounds.destroy();\r\n\t\tslideNumber.destroy();\r\n\r\n\t\t// Remove event listeners\r\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\r\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\r\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\r\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\r\n\t\twindow.removeEventListener( 'load', layout, false );\r\n\r\n\t\t// Undo DOM changes\r\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\r\n\t\tif( dom.statusElement ) dom.statusElement.remove();\r\n\r\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\r\n\r\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\r\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\r\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\r\n\r\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\r\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\r\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\r\n\r\n\t\tdom.slides.style.removeProperty( 'width' );\r\n\t\tdom.slides.style.removeProperty( 'height' );\r\n\t\tdom.slides.style.removeProperty( 'zoom' );\r\n\t\tdom.slides.style.removeProperty( 'left' );\r\n\t\tdom.slides.style.removeProperty( 'top' );\r\n\t\tdom.slides.style.removeProperty( 'bottom' );\r\n\t\tdom.slides.style.removeProperty( 'right' );\r\n\t\tdom.slides.style.removeProperty( 'transform' );\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\r\n\t\t\tslide.style.removeProperty( 'display' );\r\n\t\t\tslide.style.removeProperty( 'top' );\r\n\t\t\tslide.removeAttribute( 'hidden' );\r\n\t\t\tslide.removeAttribute( 'aria-hidden' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to one of our custom reveal.js events,\r\n\t * like slidechanged.\r\n\t */\r\n\tfunction on( type, listener, useCapture ) {\r\n\r\n\t\trevealElement.addEventListener( type, listener, useCapture );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unsubscribes from a reveal.js event.\r\n\t */\r\n\tfunction off( type, listener, useCapture ) {\r\n\r\n\t\trevealElement.removeEventListener( type, listener, useCapture );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies CSS transforms to the slides container. The container\r\n\t * is transformed from two separate sources: layout and the overview\r\n\t * mode.\r\n\t *\r\n\t * @param {object} transforms\r\n\t */\r\n\tfunction transformSlides( transforms ) {\r\n\r\n\t\t// Pick up new transforms from arguments\r\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\r\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\r\n\r\n\t\t// Apply the transforms to the slides container\r\n\t\tif( slidesTransform.layout ) {\r\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches an event of the specified type from the\r\n\t * reveal DOM element.\r\n\t */\r\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\r\n\r\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\r\n\t\tevent.initEvent( type, bubbles, true );\r\n\t\tUtil.extend( event, data );\r\n\t\ttarget.dispatchEvent( event );\r\n\r\n\t\tif( target === dom.wrapper ) {\r\n\t\t\t// If we're in an iframe, post each reveal.js event to the\r\n\t\t\t// parent window. Used by the notes plugin\r\n\t\t\tdispatchPostMessage( type );\r\n\t\t}\r\n\r\n\t\treturn event;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatched a postMessage of the given type from our window.\r\n\t */\r\n\tfunction dispatchPostMessage( type, data ) {\r\n\r\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\r\n\t\t\tlet message = {\r\n\t\t\t\tnamespace: 'reveal',\r\n\t\t\t\teventName: type,\r\n\t\t\t\tstate: getState()\r\n\t\t\t};\r\n\r\n\t\t\tUtil.extend( message, data );\r\n\r\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Bind preview frame links.\r\n\t *\r\n\t * @param {string} [selector=a] - selector for anchors\r\n\t */\r\n\tfunction enablePreviewLinks( selector = 'a' ) {\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\r\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\r\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unbind preview frame links.\r\n\t */\r\n\tfunction disablePreviewLinks( selector = 'a' ) {\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\r\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\r\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a preview window for the target URL.\r\n\t *\r\n\t * @param {string} url - url for preview iframe src\r\n\t */\r\n\tfunction showPreview( url ) {\r\n\r\n\t\tcloseOverlay();\r\n\r\n\t\tdom.overlay = document.createElement( 'div' );\r\n\t\tdom.overlay.classList.add( 'overlay' );\r\n\t\tdom.overlay.classList.add( 'overlay-preview' );\r\n\t\tdom.wrapper.appendChild( dom.overlay );\r\n\r\n\t\tdom.overlay.innerHTML =\r\n\t\t\t`<header>\r\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\r\n\t\t\t</header>\r\n\t\t\t<div class=\"spinner\"></div>\r\n\t\t\t<div class=\"viewport\">\r\n\t\t\t\t<iframe src=\"${url}\"></iframe>\r\n\t\t\t\t<small class=\"viewport-inner\">\r\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\r\n\t\t\t\t</small>\r\n\t\t\t</div>`;\r\n\r\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\r\n\t\t\tdom.overlay.classList.add( 'loaded' );\r\n\t\t}, false );\r\n\r\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\r\n\t\t\tcloseOverlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}, false );\r\n\r\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\r\n\t\t\tcloseOverlay();\r\n\t\t}, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Open or close help overlay window.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * help is open, false means it's closed.\r\n\t */\r\n\tfunction toggleHelp( override ){\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? showHelp() : closeOverlay();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif( dom.overlay ) {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshowHelp();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens an overlay window with help material.\r\n\t */\r\n\tfunction showHelp() {\r\n\r\n\t\tif( config.help ) {\r\n\r\n\t\t\tcloseOverlay();\r\n\r\n\t\t\tdom.overlay = document.createElement( 'div' );\r\n\t\t\tdom.overlay.classList.add( 'overlay' );\r\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\r\n\t\t\tdom.wrapper.appendChild( dom.overlay );\r\n\r\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\r\n\r\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\r\n\t\t\t\tbindings = keyboard.getBindings();\r\n\r\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\r\n\t\t\tfor( let key in shortcuts ) {\r\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\r\n\t\t\t}\r\n\r\n\t\t\t// Add custom key bindings that have associated descriptions\r\n\t\t\tfor( let binding in bindings ) {\r\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\r\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\thtml += '</table>';\r\n\r\n\t\t\tdom.overlay.innerHTML = `\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t</header>\r\n\t\t\t\t<div class=\"viewport\">\r\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\r\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Closes any currently open overlay.\r\n\t */\r\n\tfunction closeOverlay() {\r\n\r\n\t\tif( dom.overlay ) {\r\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\r\n\t\t\tdom.overlay = null;\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies JavaScript-controlled layout rules to the\r\n\t * presentation.\r\n\t */\r\n\tfunction layout() {\r\n\r\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\r\n\r\n\t\t\tif( !config.disableLayout ) {\r\n\r\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\r\n\t\t\t\t// viewport which leads to part of the presentation being\r\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\r\n\t\t\t\t// property where 100x adds up to the correct height.\r\n\t\t\t\t//\r\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\r\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\r\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst size = getComputedSlideSize();\r\n\r\n\t\t\t\tconst oldScale = scale;\r\n\r\n\t\t\t\t// Layout the contents of the slides\r\n\t\t\t\tlayoutSlideContents( config.width, config.height );\r\n\r\n\t\t\t\tdom.slides.style.width = size.width + 'px';\r\n\t\t\t\tdom.slides.style.height = size.height + 'px';\r\n\r\n\t\t\t\t// Determine scale of content to fit within available space\r\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\r\n\r\n\t\t\t\t// Respect max/min scale settings\r\n\t\t\t\tscale = Math.max( scale, config.minScale );\r\n\t\t\t\tscale = Math.min( scale, config.maxScale );\r\n\r\n\t\t\t\t// Don't apply any scaling styles if scale is 1\r\n\t\t\t\tif( scale === 1 ) {\r\n\t\t\t\t\tdom.slides.style.zoom = '';\r\n\t\t\t\t\tdom.slides.style.left = '';\r\n\t\t\t\t\tdom.slides.style.top = '';\r\n\t\t\t\t\tdom.slides.style.bottom = '';\r\n\t\t\t\t\tdom.slides.style.right = '';\r\n\t\t\t\t\ttransformSlides( { layout: '' } );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdom.slides.style.zoom = '';\r\n\t\t\t\t\tdom.slides.style.left = '50%';\r\n\t\t\t\t\tdom.slides.style.top = '50%';\r\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\r\n\t\t\t\t\tdom.slides.style.right = 'auto';\r\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Select all slides, vertical and horizontal\r\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\r\n\r\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\r\n\t\t\t\t\tconst slide = slides[ i ];\r\n\r\n\t\t\t\t\t// Don't bother updating invisible slides\r\n\t\t\t\t\tif( slide.style.display === 'none' ) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\r\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t\t\t\t// children will be\r\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\t\t\tslide.style.top = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslide.style.top = '';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( oldScale !== scale ) {\r\n\t\t\t\t\tdispatchEvent({\r\n\t\t\t\t\t\ttype: 'resize',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\toldScale,\r\n\t\t\t\t\t\t\tscale,\r\n\t\t\t\t\t\t\tsize\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\r\n\r\n\t\t\tprogress.update();\r\n\t\t\tbackgrounds.updateParallax();\r\n\r\n\t\t\tif( overview.isActive() ) {\r\n\t\t\t\toverview.update();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies layout logic to the contents of all slides in\r\n\t * the presentation.\r\n\t *\r\n\t * @param {string|number} width\r\n\t * @param {string|number} height\r\n\t */\r\n\tfunction layoutSlideContents( width, height ) {\r\n\r\n\t\t// Handle sizing of elements with the 'r-stretch' class\r\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\r\n\r\n\t\t\t// Determine how much vertical space we can use\r\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\r\n\r\n\t\t\t// Consider the aspect ratio of media elements\r\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\r\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\r\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\r\n\r\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\r\n\r\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\r\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.style.width = width + 'px';\r\n\t\t\t\telement.style.height = remainingHeight + 'px';\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the computed pixel size of our slides. These\r\n\t * values are based on the width and height configuration\r\n\t * options.\r\n\t *\r\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\r\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\r\n\t */\r\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\r\n\r\n\t\tconst size = {\r\n\t\t\t// Slide size\r\n\t\t\twidth: config.width,\r\n\t\t\theight: config.height,\r\n\r\n\t\t\t// Presentation size\r\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\r\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\r\n\t\t};\r\n\r\n\t\t// Reduce available space by margin\r\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\r\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\r\n\r\n\t\t// Slide width may be a percentage of available width\r\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\r\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\r\n\t\t}\r\n\r\n\t\t// Slide height may be a percentage of available height\r\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\r\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\r\n\t\t}\r\n\r\n\t\treturn size;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stores the vertical index of a stack so that the same\r\n\t * vertical slide can be selected when navigating to and\r\n\t * from the stack.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t * @param {string|number} [v=0] Index to memorize\r\n\t */\r\n\tfunction setPreviousVerticalIndex( stack, v ) {\r\n\r\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\r\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the vertical index which was stored using\r\n\t * #setPreviousVerticalIndex() or 0 if no previous index\r\n\t * exists.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t */\r\n\tfunction getPreviousVerticalIndex( stack ) {\r\n\r\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\r\n\t\t\t// Prefer manually defined start-indexv\r\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\r\n\r\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the current or specified slide is vertical\r\n\t * (nested within another slide).\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\r\n\t * orientation of\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isVerticalSlide( slide = currentSlide ) {\r\n\r\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're on the last slide in the current\r\n\t * vertical stack.\r\n\t */\r\n\tfunction isLastVerticalSlide() {\r\n\r\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif( currentSlide.nextElementSibling ) return false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the first slide in\r\n\t * the presentation.\r\n\t */\r\n\tfunction isFirstSlide() {\r\n\r\n\t\treturn indexh === 0 && indexv === 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the last slide in\r\n\t * the presenation. If the last slide is a stack, we only\r\n\t * consider this the last slide if it's at the end of the\r\n\t * stack.\r\n\t */\r\n\tfunction isLastSlide() {\r\n\r\n\t\tif( currentSlide ) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif( currentSlide.nextElementSibling ) return false;\r\n\r\n\t\t\t// If it's vertical, does its parent have a next sibling?\r\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Enters the paused mode which fades everything on screen to\r\n\t * black.\r\n\t */\r\n\tfunction pause() {\r\n\r\n\t\tif( config.pause ) {\r\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\r\n\r\n\t\t\tcancelAutoSlide();\r\n\t\t\tdom.wrapper.classList.add( 'paused' );\r\n\r\n\t\t\tif( wasPaused === false ) {\r\n\t\t\t\tdispatchEvent({ type: 'paused' });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Exits from the paused mode.\r\n\t */\r\n\tfunction resume() {\r\n\r\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\r\n\t\tdom.wrapper.classList.remove( 'paused' );\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\tif( wasPaused ) {\r\n\t\t\tdispatchEvent({ type: 'resumed' });\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the paused mode on and off.\r\n\t */\r\n\tfunction togglePause( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? pause() : resume();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tisPaused() ? resume() : pause();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if we are currently in the paused mode.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isPaused() {\r\n\r\n\t\treturn dom.wrapper.classList.contains( 'paused' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the auto slide mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which sets the desired state.\r\n\t * True means autoplay starts, false means it stops.\r\n\t */\r\n\r\n\tfunction toggleAutoSlide( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the auto slide mode is currently on.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isAutoSliding() {\r\n\r\n\t\treturn !!( autoSlide && !autoSlidePaused );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Steps from the current point in the presentation to the\r\n\t * slide which matches the specified horizontal and vertical\r\n\t * indices.\r\n\t *\r\n\t * @param {number} [h=indexh] Horizontal index of the target slide\r\n\t * @param {number} [v=indexv] Vertical index of the target slide\r\n\t * @param {number} [f] Index of a fragment within the\r\n\t * target slide to activate\r\n\t * @param {number} [origin] Origin for use in multimaster environments\r\n\t */\r\n\tfunction slide( h, v, f, origin ) {\r\n\r\n\t\t// Dispatch an event before hte slide\r\n\t\tconst slidechange = dispatchEvent({\r\n\t\t\ttype: 'beforeslidechange',\r\n\t\t\tdata: {\r\n\t\t\t\tindexh: h === undefined ? indexh : h,\r\n\t\t\t\tindexv: v === undefined ? indexv : v,\r\n\t\t\t\torigin\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Abort if this slide change was prevented by an event listener\r\n\t\tif( slidechange.defaultPrevented ) return;\r\n\r\n\t\t// Remember where we were at before\r\n\t\tpreviousSlide = currentSlide;\r\n\r\n\t\t// Query all horizontal slides in the deck\r\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\r\n\r\n\t\t// Abort if there are no slides\r\n\t\tif( horizontalSlides.length === 0 ) return;\r\n\r\n\t\t// If no vertical index is specified and the upcoming slide is a\r\n\t\t// stack, resume at its previous vertical index\r\n\t\tif( v === undefined && !overview.isActive() ) {\r\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\r\n\t\t}\r\n\r\n\t\t// If we were on a vertical stack, remember what vertical index\r\n\t\t// it was on so we can resume at the same position when returning\r\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\r\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\r\n\t\t}\r\n\r\n\t\t// Remember the state before this slide\r\n\t\tconst stateBefore = state.concat();\r\n\r\n\t\t// Reset the state array\r\n\t\tstate.length = 0;\r\n\r\n\t\tlet indexhBefore = indexh || 0,\r\n\t\t\tindexvBefore = indexv || 0;\r\n\r\n\t\t// Activate and transition to the new slide\r\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\r\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\r\n\r\n\t\t// Dispatch an event if the slide changed\r\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\r\n\r\n\t\t// Ensure that the previous slide is never the same as the current\r\n\t\tif( !slideChanged ) previousSlide = null;\r\n\r\n\t\t// Find the current horizontal slide and any possible vertical slides\r\n\t\t// within it\r\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\r\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\t// Store references to the previous and current slides\r\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\r\n\r\n\t\tlet autoAnimateTransition = false;\r\n\r\n\t\t// Detect if we're moving between two auto-animated slides\r\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\r\n\r\n\t\t\t// If this is an auto-animated transition, we disable the\r\n\t\t\t// regular slide transition\r\n\t\t\t//\r\n\t\t\t// Note 20-03-2020:\r\n\t\t\t// This needs to happen before we update slide visibility,\r\n\t\t\t// otherwise transitions will still run in Safari.\r\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\r\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\r\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\r\n\r\n\t\t\t\tautoAnimateTransition = true;\r\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\r\n\t\t\t}\r\n\r\n\t\t\ttransition = 'running';\r\n\r\n\t\t}\r\n\r\n\t\t// Update the visibility of slides now that the indices have changed\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tlayout();\r\n\r\n\t\t// Update the overview if it's currently active\r\n\t\tif( overview.isActive() ) {\r\n\t\t\toverview.update();\r\n\t\t}\r\n\r\n\t\t// Show fragment, if specified\r\n\t\tif( typeof f !== 'undefined' ) {\r\n\t\t\tfragments.goto( f );\r\n\t\t}\r\n\r\n\t\t// Solves an edge case where the previous slide maintains the\r\n\t\t// 'present' class when navigating between adjacent vertical\r\n\t\t// stacks\r\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\r\n\t\t\tpreviousSlide.classList.remove( 'present' );\r\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\r\n\r\n\t\t\t// Reset all slides upon navigate to home\r\n\t\t\tif( isFirstSlide() ) {\r\n\t\t\t\t// Launch async task\r\n\t\t\t\tsetTimeout( () => {\r\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\r\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}, 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply the new state\r\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\r\n\t\t\t// Check if this state existed on the previous slide. If it\r\n\t\t\t// did, we will avoid adding it repeatedly\r\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\r\n\t\t\t\tif( stateBefore[j] === state[i] ) {\r\n\t\t\t\t\tstateBefore.splice( j, 1 );\r\n\t\t\t\t\tcontinue stateLoop;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdom.viewport.classList.add( state[i] );\r\n\r\n\t\t\t// Dispatch custom event matching the state's name\r\n\t\t\tdispatchEvent({ type: state[i] });\r\n\t\t}\r\n\r\n\t\t// Clean up the remains of the previous state\r\n\t\twhile( stateBefore.length ) {\r\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\r\n\t\t}\r\n\r\n\t\tif( slideChanged ) {\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'slidechanged',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh,\r\n\t\t\t\t\tindexv,\r\n\t\t\t\t\tpreviousSlide,\r\n\t\t\t\t\tcurrentSlide,\r\n\t\t\t\t\torigin\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Handle embedded content\r\n\t\tif( slideChanged || !previousSlide ) {\r\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\r\n\t\t}\r\n\r\n\t\t// Announce the current slide contents to screen readers\r\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\r\n\t\t// from triggering layout mid-frame\r\n\t\trequestAnimationFrame( () => {\r\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\r\n\t\t});\r\n\r\n\t\tprogress.update();\r\n\t\tcontrols.update();\r\n\t\tnotes.update();\r\n\t\tbackgrounds.update();\r\n\t\tbackgrounds.updateParallax();\r\n\t\tslideNumber.update();\r\n\t\tfragments.update();\r\n\r\n\t\t// Update the URL hash\r\n\t\tlocation.writeURL();\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Auto-animation\r\n\t\tif( autoAnimateTransition ) {\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\r\n\t\t\t}, 0 );\r\n\r\n\t\t\tif( config.autoAnimate ) {\r\n\t\t\t\t// Run the auto-animation between our slides\r\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs the presentation with the current DOM. Useful\r\n\t * when new slides or control elements are added or when\r\n\t * the configuration has changed.\r\n\t */\r\n\tfunction sync() {\r\n\r\n\t\t// Subscribe to input\r\n\t\tremoveEventListeners();\r\n\t\taddEventListeners();\r\n\r\n\t\t// Force a layout to make sure the current config is accounted for\r\n\t\tlayout();\r\n\r\n\t\t// Reflect the current autoSlide value\r\n\t\tautoSlide = config.autoSlide;\r\n\r\n\t\t// Start auto-sliding if it's enabled\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Re-create all slide backgrounds\r\n\t\tbackgrounds.create();\r\n\r\n\t\t// Write the current hash to the URL\r\n\t\tlocation.writeURL();\r\n\r\n\t\tfragments.sortAll();\r\n\r\n\t\tcontrols.update();\r\n\t\tprogress.update();\r\n\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tnotes.update();\r\n\t\tnotes.updateVisibility();\r\n\t\tbackgrounds.update( true );\r\n\t\tslideNumber.update();\r\n\t\tslideContent.formatEmbeddedContent();\r\n\r\n\t\t// Start or stop embedded content depending on global config\r\n\t\tif( config.autoPlayMedia === false ) {\r\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\r\n\t\t}\r\n\r\n\t\tif( overview.isActive() ) {\r\n\t\t\toverview.layout();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates reveal.js to keep in sync with new slide attributes. For\r\n\t * example, if you add a new `data-background-image` you can call\r\n\t * this to have reveal.js render the new background image.\r\n\t *\r\n\t * Similar to #sync() but more efficient when you only need to\r\n\t * refresh a specific slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tfunction syncSlide( slide = currentSlide ) {\r\n\r\n\t\tbackgrounds.sync( slide );\r\n\t\tfragments.sync( slide );\r\n\r\n\t\tslideContent.load( slide );\r\n\r\n\t\tbackgrounds.update();\r\n\t\tnotes.update();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets all vertical slides so that only the first\r\n\t * is visible.\r\n\t */\r\n\tfunction resetVerticalSlides() {\r\n\r\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\r\n\r\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\r\n\r\n\t\t\t\tif( y > 0 ) {\r\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\r\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\r\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\r\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Randomly shuffles all slides in the deck.\r\n\t */\r\n\tfunction shuffle( slides = getHorizontalSlides() ) {\r\n\r\n\t\tslides.forEach( ( slide, i ) => {\r\n\r\n\t\t\t// Insert the slide next to a randomly picked sibling slide\r\n\t\t\t// slide. This may cause the slide to insert before itself,\r\n\t\t\t// but that's not an issue.\r\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\r\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\r\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\r\n\t\t\t}\r\n\r\n\t\t\t// Randomize the order of vertical slides (if there are any)\r\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\r\n\t\t\tif( verticalSlides.length ) {\r\n\t\t\t\tshuffle( verticalSlides );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates one dimension of slides by showing the slide\r\n\t * with the specified index.\r\n\t *\r\n\t * @param {string} selector A CSS selector that will fetch\r\n\t * the group of slides we are working with\r\n\t * @param {number} index The index of the slide that should be\r\n\t * shown\r\n\t *\r\n\t * @return {number} The index of the slide that is now shown,\r\n\t * might differ from the passed in index if it was out of\r\n\t * bounds.\r\n\t */\r\n\tfunction updateSlides( selector, index ) {\r\n\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\r\n\t\t\tslidesLength = slides.length;\r\n\r\n\t\tlet printMode = print.isPrintingPDF();\r\n\t\tlet loopedForwards = false;\r\n\t\tlet loopedBackwards = false;\r\n\r\n\t\tif( slidesLength ) {\r\n\r\n\t\t\t// Should the index loop?\r\n\t\t\tif( config.loop ) {\r\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\r\n\r\n\t\t\t\tindex %= slidesLength;\r\n\r\n\t\t\t\tif( index < 0 ) {\r\n\t\t\t\t\tindex = slidesLength + index;\r\n\t\t\t\t\tloopedBackwards = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Enforce max and minimum index bounds\r\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\r\n\r\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\r\n\t\t\t\tlet element = slides[i];\r\n\r\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\r\n\r\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\r\n\t\t\t\telement.classList.remove( 'past' );\r\n\t\t\t\telement.classList.remove( 'present' );\r\n\t\t\t\telement.classList.remove( 'future' );\r\n\r\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\r\n\t\t\t\telement.setAttribute( 'hidden', '' );\r\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\r\n\r\n\t\t\t\t// If this element contains vertical slides\r\n\t\t\t\tif( element.querySelector( 'section' ) ) {\r\n\t\t\t\t\telement.classList.add( 'stack' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\r\n\t\t\t\tif( printMode ) {\r\n\t\t\t\t\telement.classList.add( 'present' );\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( i < index ) {\r\n\t\t\t\t\t// Any element previous to index is given the 'past' class\r\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\r\n\r\n\t\t\t\t\tif( config.fragments ) {\r\n\t\t\t\t\t\t// Show all fragments in prior slides\r\n\t\t\t\t\t\tshowFragmentsIn( element );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( i > index ) {\r\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\r\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\r\n\r\n\t\t\t\t\tif( config.fragments ) {\r\n\t\t\t\t\t\t// Hide all fragments in future slides\r\n\t\t\t\t\t\thideFragmentsIn( element );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Update the visibility of fragments when a presentation loops\r\n\t\t\t\t// in either direction\r\n\t\t\t\telse if( i === index && config.fragments ) {\r\n\t\t\t\t\tif( loopedForwards ) {\r\n\t\t\t\t\t\thideFragmentsIn( element );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( loopedBackwards ) {\r\n\t\t\t\t\t\tshowFragmentsIn( element );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet slide = slides[index];\r\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\r\n\r\n\t\t\t// Mark the current slide as present\r\n\t\t\tslide.classList.add( 'present' );\r\n\t\t\tslide.removeAttribute( 'hidden' );\r\n\t\t\tslide.removeAttribute( 'aria-hidden' );\r\n\r\n\t\t\tif( !wasPresent ) {\r\n\t\t\t\t// Dispatch an event indicating the slide is now visible\r\n\t\t\t\tdispatchEvent({\r\n\t\t\t\t\ttarget: slide,\r\n\t\t\t\t\ttype: 'visible',\r\n\t\t\t\t\tbubbles: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// If this slide has a state associated with it, add it\r\n\t\t\t// onto the current state of the deck\r\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\r\n\t\t\tif( slideState ) {\r\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Since there are no slides we can't be anywhere beyond the\r\n\t\t\t// zeroth index\r\n\t\t\tindex = 0;\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Shows all fragment elements within the given contaienr.\r\n\t */\r\n\tfunction showFragmentsIn( container ) {\r\n\r\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\r\n\t\t\tfragment.classList.add( 'visible' );\r\n\t\t\tfragment.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides all fragment elements within the given contaienr.\r\n\t */\r\n\tfunction hideFragmentsIn( container ) {\r\n\r\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\r\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Optimization method; hide all slides that are far away\r\n\t * from the present slide.\r\n\t */\r\n\tfunction updateSlidesVisibility() {\r\n\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tlet horizontalSlides = getHorizontalSlides(),\r\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\r\n\t\t\tdistanceX,\r\n\t\t\tdistanceY;\r\n\r\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\r\n\r\n\t\t\t// The number of steps away from the present slide that will\r\n\t\t\t// be visible\r\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\r\n\r\n\t\t\t// Shorten the view distance on devices that typically have\r\n\t\t\t// less resources\r\n\t\t\tif( Device.isMobile ) {\r\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\r\n\t\t\t}\r\n\r\n\t\t\t// All slides need to be visible when exporting to PDF\r\n\t\t\tif( print.isPrintingPDF() ) {\r\n\t\t\t\tviewDistance = Number.MAX_VALUE;\r\n\t\t\t}\r\n\r\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\r\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\r\n\r\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\r\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\r\n\r\n\t\t\t\t// Determine how far away this slide is from the present\r\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\r\n\r\n\t\t\t\t// If the presentation is looped, distance should measure\r\n\t\t\t\t// 1 between the first and last slides\r\n\t\t\t\tif( config.loop ) {\r\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show the horizontal slide if it's within the view distance\r\n\t\t\t\tif( distanceX < viewDistance ) {\r\n\t\t\t\t\tslideContent.load( horizontalSlide );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslideContent.unload( horizontalSlide );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( verticalSlidesLength ) {\r\n\r\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\r\n\r\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\r\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\r\n\r\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\r\n\r\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\r\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\r\n\t\t\tif( hasVerticalSlides() ) {\r\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\r\n\t\t\tif( hasHorizontalSlides() ) {\r\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determine what available routes there are for navigation.\r\n\t *\r\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\r\n\t */\r\n\tfunction availableRoutes({ includeFragments = false } = {}) {\r\n\r\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\r\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\r\n\r\n\t\tlet routes = {\r\n\t\t\tleft: indexh > 0,\r\n\t\t\tright: indexh < horizontalSlides.length - 1,\r\n\t\t\tup: indexv > 0,\r\n\t\t\tdown: indexv < verticalSlides.length - 1\r\n\t\t};\r\n\r\n\t\t// Looped presentations can always be navigated as long as\r\n\t\t// there are slides available\r\n\t\tif( config.loop ) {\r\n\t\t\tif( horizontalSlides.length > 1 ) {\r\n\t\t\t\troutes.left = true;\r\n\t\t\t\troutes.right = true;\r\n\t\t\t}\r\n\r\n\t\t\tif( verticalSlides.length > 1 ) {\r\n\t\t\t\troutes.up = true;\r\n\t\t\t\troutes.down = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\r\n\t\t\troutes.right = routes.right || routes.down;\r\n\t\t\troutes.left = routes.left || routes.up;\r\n\t\t}\r\n\r\n\t\t// If includeFragments is set, a route will be considered\r\n\t\t// availalbe if either a slid OR fragment is available in\r\n\t\t// the given direction\r\n\t\tif( includeFragments === true ) {\r\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\r\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\r\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\r\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\r\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\r\n\t\t}\r\n\r\n\t\t// Reverse horizontal controls for rtl\r\n\t\tif( config.rtl ) {\r\n\t\t\tlet left = routes.left;\r\n\t\t\troutes.left = routes.right;\r\n\t\t\troutes.right = left;\r\n\t\t}\r\n\r\n\t\treturn routes;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of past slides. This can be used as a global\r\n\t * flattened index for slides.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\r\n\t *\r\n\t * @return {number} Past slide count\r\n\t */\r\n\tfunction getSlidePastCount( slide = currentSlide ) {\r\n\r\n\t\tlet horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t// The number of past slides\r\n\t\tlet pastCount = 0;\r\n\r\n\t\t// Step through all slides and count the past ones\r\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\r\n\r\n\t\t\tlet horizontalSlide = horizontalSlides[i];\r\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\r\n\r\n\t\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\t\tif( verticalSlides[j] === slide ) {\r\n\t\t\t\t\tbreak mainLoop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Don't count slides with the \"uncounted\" class\r\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\r\n\t\t\t\t\tpastCount++;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\tif( horizontalSlide === slide ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Don't count the wrapping section for vertical slides and\r\n\t\t\t// slides marked as uncounted\r\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\r\n\t\t\t\tpastCount++;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn pastCount;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a value ranging from 0-1 that represents\r\n\t * how far into the presentation we have navigated.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getProgress() {\r\n\r\n\t\t// The number of past and total slides\r\n\t\tlet totalCount = getTotalSlides();\r\n\t\tlet pastCount = getSlidePastCount();\r\n\r\n\t\tif( currentSlide ) {\r\n\r\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\r\n\r\n\t\t\t// If there are fragments in the current slide those should be\r\n\t\t\t// accounted for in the progress.\r\n\t\t\tif( allFragments.length > 0 ) {\r\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\r\n\r\n\t\t\t\t// This value represents how big a portion of the slide progress\r\n\t\t\t\t// that is made up by its fragments (0-1)\r\n\t\t\t\tlet fragmentWeight = 0.9;\r\n\r\n\t\t\t\t// Add fragment progress to the past slide count\r\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the h/v location and fragment of the current,\r\n\t * or specified, slide.\r\n\t *\r\n\t * @param {HTMLElement} [slide] If specified, the returned\r\n\t * index will be for this slide rather than the currently\r\n\t * active one\r\n\t *\r\n\t * @return {{h: number, v: number, f: number}}\r\n\t */\r\n\tfunction getIndices( slide ) {\r\n\r\n\t\t// By default, return the current indices\r\n\t\tlet h = indexh,\r\n\t\t\tv = indexv,\r\n\t\t\tf;\r\n\r\n\t\t// If a slide is specified, return the indices of that slide\r\n\t\tif( slide ) {\r\n\t\t\tlet isVertical = isVerticalSlide( slide );\r\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\r\n\r\n\t\t\t// Select all horizontal slides\r\n\t\t\tlet horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t\t// Now that we know which the horizontal slide is, get its index\r\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\r\n\r\n\t\t\t// Assume we're not vertical\r\n\t\t\tv = undefined;\r\n\r\n\t\t\t// If this is a vertical slide, grab the vertical index\r\n\t\t\tif( isVertical ) {\r\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( !slide && currentSlide ) {\r\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\r\n\t\t\tif( hasFragments ) {\r\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\r\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { h, v, f };\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves all slides in this presentation.\r\n\t */\r\n\tfunction getSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of all horizontal slides in the deck. Each\r\n\t * vertical stack is included as one horizontal slide in the\r\n\t * resulting array.\r\n\t */\r\n\tfunction getHorizontalSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical slides that exist within this deck.\r\n\t */\r\n\tfunction getVerticalSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical stacks (each stack can contain multiple slides).\r\n\t */\r\n\tfunction getVerticalStacks() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two horizontal slides.\r\n\t */\r\n\tfunction hasHorizontalSlides() {\r\n\r\n\t\treturn getHorizontalSlides().length > 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two vertical slides.\r\n\t */\r\n\tfunction hasVerticalSlides() {\r\n\r\n\t\treturn getVerticalSlides().length > 1;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects where each object represents the\r\n\t * attributes on its respective slide.\r\n\t */\r\n\tfunction getSlidesAttributes() {\r\n\r\n\t\treturn getSlides().map( slide => {\r\n\r\n\t\t\tlet attributes = {};\r\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\r\n\t\t\t\tlet attribute = slide.attributes[ i ];\r\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\r\n\t\t\t}\r\n\t\t\treturn attributes;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the total number of slides in this presentation.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getTotalSlides() {\r\n\r\n\t\treturn getSlides().length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the slide element matching the specified index.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction getSlide( x, y ) {\r\n\r\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\r\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\r\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\r\n\t\t}\r\n\r\n\t\treturn horizontalSlide;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the background element for the given slide.\r\n\t * All slides, even the ones with no background properties\r\n\t * defined, have a background element so as long as the\r\n\t * index is valid an element will be returned.\r\n\t *\r\n\t * @param {mixed} x Horizontal background index OR a slide\r\n\t * HTML element\r\n\t * @param {number} y Vertical background index\r\n\t * @return {(HTMLElement[]|*)}\r\n\t */\r\n\tfunction getSlideBackground( x, y ) {\r\n\r\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\r\n\t\tif( slide ) {\r\n\t\t\treturn slide.slideBackgroundElement;\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the current state of the presentation as\r\n\t * an object. This state can then be restored at any\r\n\t * time.\r\n\t *\r\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\r\n\t */\r\n\tfunction getState() {\r\n\r\n\t\tlet indices = getIndices();\r\n\r\n\t\treturn {\r\n\t\t\tindexh: indices.h,\r\n\t\t\tindexv: indices.v,\r\n\t\t\tindexf: indices.f,\r\n\t\t\tpaused: isPaused(),\r\n\t\t\toverview: overview.isActive()\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the presentation to the given state.\r\n\t *\r\n\t * @param {object} state As generated by getState()\r\n\t * @see {@link getState} generates the parameter `state`\r\n\t */\r\n\tfunction setState( state ) {\r\n\r\n\t\tif( typeof state === 'object' ) {\r\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\r\n\r\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\r\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\r\n\r\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\r\n\t\t\t\ttogglePause( pausedFlag );\r\n\t\t\t}\r\n\r\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\r\n\t\t\t\toverview.toggle( overviewFlag );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cues a new automated slide if enabled in the config.\r\n\t */\r\n\tfunction cueAutoSlide() {\r\n\r\n\t\tcancelAutoSlide();\r\n\r\n\t\tif( currentSlide && config.autoSlide !== false ) {\r\n\r\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\r\n\r\n\t\t\t// When the slide first appears there is no \"current\" fragment so\r\n\t\t\t// we look for a data-autoslide timing on the first fragment\r\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\r\n\r\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\r\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\r\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\r\n\r\n\t\t\t// Pick value in the following priority order:\r\n\t\t\t// 1. Current fragment's data-autoslide\r\n\t\t\t// 2. Current slide's data-autoslide\r\n\t\t\t// 3. Parent slide's data-autoslide\r\n\t\t\t// 4. Global autoSlide setting\r\n\t\t\tif( fragmentAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse if( slideAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse if( parentAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tautoSlide = config.autoSlide;\r\n\r\n\t\t\t\t// If there are media elements with data-autoplay,\r\n\t\t\t\t// automatically set the autoSlide duration to the\r\n\t\t\t\t// length of that media. Not applicable if the slide\r\n\t\t\t\t// is divided up into fragments.\r\n\t\t\t\t// playbackRate is accounted for in the duration.\r\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\r\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\r\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\r\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\r\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Cue the next auto-slide if:\r\n\t\t\t// - There is an autoSlide value\r\n\t\t\t// - Auto-sliding isn't paused by the user\r\n\t\t\t// - The presentation isn't paused\r\n\t\t\t// - The overview isn't active\r\n\t\t\t// - The presentation isn't over\r\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\r\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\r\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\r\n\t\t\t\t\t\tconfig.autoSlideMethod()\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnavigateNext();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcueAutoSlide();\r\n\t\t\t\t}, autoSlide );\r\n\t\t\t\tautoSlideStartTime = Date.now();\r\n\t\t\t}\r\n\r\n\t\t\tif( autoSlidePlayer ) {\r\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels any ongoing request to auto-slide.\r\n\t */\r\n\tfunction cancelAutoSlide() {\r\n\r\n\t\tclearTimeout( autoSlideTimeout );\r\n\t\tautoSlideTimeout = -1;\r\n\r\n\t}\r\n\r\n\tfunction pauseAutoSlide() {\r\n\r\n\t\tif( autoSlide && !autoSlidePaused ) {\r\n\t\t\tautoSlidePaused = true;\r\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\r\n\t\t\tclearTimeout( autoSlideTimeout );\r\n\r\n\t\t\tif( autoSlidePlayer ) {\r\n\t\t\t\tautoSlidePlayer.setPlaying( false );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction resumeAutoSlide() {\r\n\r\n\t\tif( autoSlide && autoSlidePaused ) {\r\n\t\t\tautoSlidePaused = false;\r\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\r\n\t\t\tcueAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateLeft({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif( config.rtl ) {\r\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\r\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\r\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateRight({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif( config.rtl ) {\r\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\r\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\r\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateUp({skipFragments=false}={}) {\r\n\r\n\t\t// Prioritize hiding fragments\r\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\r\n\t\t\tslide( indexh, indexv - 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateDown({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\r\n\t\t\tslide( indexh, indexv + 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigates backwards, prioritized in the following order:\r\n\t * 1) Previous fragment\r\n\t * 2) Previous vertical slide\r\n\t * 3) Previous horizontal slide\r\n\t */\r\n\tfunction navigatePrev({skipFragments=false}={}) {\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( skipFragments || fragments.prev() === false ) {\r\n\t\t\tif( availableRoutes().up ) {\r\n\t\t\t\tnavigateUp({skipFragments});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\r\n\t\t\t\tlet previousSlide;\r\n\r\n\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When going backwards and arriving on a stack we start\r\n\t\t\t\t// at the bottom of the stack\r\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\r\n\t\t\t\t\tlet h = indexh - 1;\r\n\t\t\t\t\tslide( h, v );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnavigateLeft({skipFragments});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The reverse of #navigatePrev().\r\n\t */\r\n\tfunction navigateNext({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( skipFragments || fragments.next() === false ) {\r\n\r\n\t\t\tlet routes = availableRoutes();\r\n\r\n\t\t\t// When looping is enabled `routes.down` is always available\r\n\t\t\t// so we need a separate check for when we've reached the\r\n\t\t\t// end of a stack and should move horizontally\r\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\r\n\t\t\t\troutes.down = false;\r\n\t\t\t}\r\n\r\n\t\t\tif( routes.down ) {\r\n\t\t\t\tnavigateDown({skipFragments});\r\n\t\t\t}\r\n\t\t\telse if( config.rtl ) {\r\n\t\t\t\tnavigateLeft({skipFragments});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnavigateRight({skipFragments});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ----------------------------- EVENTS -------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t/**\r\n\t * Called by all event handlers that are based on user\r\n\t * input.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onUserInput( event ) {\r\n\r\n\t\tif( config.autoSlideStoppable ) {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t* Listener for post message events posted to this window.\r\n\t*/\r\n\tfunction onPostMessage( event ) {\r\n\r\n\t\tlet data = event.data;\r\n\r\n\t\t// Make sure we're dealing with JSON\r\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\r\n\t\t\tdata = JSON.parse( data );\r\n\r\n\t\t\t// Check if the requested method can be found\r\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\r\n\r\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\r\n\r\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\r\n\r\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\r\n\t\t\t\t\t// our method invocation for getter functions\r\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Event listener for transition end on the current slide.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onTransitionEnd( event ) {\r\n\r\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\r\n\t\t\ttransition = 'idle';\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'slidetransitionend',\r\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A global listener for all click events inside of the\r\n\t * .slides container.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onSlidesClicked( event ) {\r\n\r\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\r\n\r\n\t\t// If a hash link is clicked, we find the target slide\r\n\t\t// and navigate to it. We previously relied on 'hashchange'\r\n\t\t// for links like these but that prevented media with\r\n\t\t// audio tracks from playing in mobile browsers since it\r\n\t\t// wasn't considered a direct interaction with the document.\r\n\t\tif( anchor ) {\r\n\t\t\tconst hash = anchor.getAttribute( 'href' );\r\n\t\t\tconst indices = location.getIndicesFromHash( hash );\r\n\r\n\t\t\tif( indices ) {\r\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'resize' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onWindowResize( event ) {\r\n\r\n\t\tlayout();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handle for the window level 'visibilitychange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onPageVisibilityChange( event ) {\r\n\r\n\t\t// If, after clicking a link or similar and we're coming back,\r\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\r\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\r\n\t\t\t// Not all elements support .blur() - SVGs among them.\r\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\r\n\t\t\t\tdocument.activeElement.blur();\r\n\t\t\t}\r\n\t\t\tdocument.body.focus();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'fullscreenchange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onFullscreenChange( event ) {\r\n\r\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\r\n\t\tif( element === dom.wrapper ) {\r\n\t\t\tevent.stopImmediatePropagation();\r\n\r\n\t\t\t// Timeout to avoid layout shift in Safari\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tReveal.layout();\r\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\r\n\t\t\t}, 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles clicks on links that are set to preview in the\r\n\t * iframe overlay.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tfunction onPreviewLinkClicked( event ) {\r\n\r\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\r\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\r\n\t\t\tif( url ) {\r\n\t\t\t\tshowPreview( url );\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles click on the auto-sliding controls element.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onAutoSlidePlayerClick( event ) {\r\n\r\n\t\t// Replay\r\n\t\tif( isLastSlide() && config.loop === false ) {\r\n\t\t\tslide( 0, 0 );\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Resume\r\n\t\telse if( autoSlidePaused ) {\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Pause\r\n\t\telse {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ------------------------------- API --------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t// The public reveal.js API\r\n\tconst API = {\r\n\t\tVERSION,\r\n\r\n\t\tinitialize,\r\n\t\tconfigure,\r\n\t\tdestroy,\r\n\r\n\t\tsync,\r\n\t\tsyncSlide,\r\n\t\tsyncFragments: fragments.sync.bind( fragments ),\r\n\r\n\t\t// Navigation methods\r\n\t\tslide,\r\n\t\tleft: navigateLeft,\r\n\t\tright: navigateRight,\r\n\t\tup: navigateUp,\r\n\t\tdown: navigateDown,\r\n\t\tprev: navigatePrev,\r\n\t\tnext: navigateNext,\r\n\r\n\t\t// Navigation aliases\r\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\r\n\r\n\t\t// Fragment methods\r\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\r\n\t\tprevFragment: fragments.prev.bind( fragments ),\r\n\t\tnextFragment: fragments.next.bind( fragments ),\r\n\r\n\t\t// Event binding\r\n\t\ton,\r\n\t\toff,\r\n\r\n\t\t// Legacy event binding methods left in for backwards compatibility\r\n\t\taddEventListener: on,\r\n\t\tremoveEventListener: off,\r\n\r\n\t\t// Forces an update in slide layout\r\n\t\tlayout,\r\n\r\n\t\t// Randomizes the order of slides\r\n\t\tshuffle,\r\n\r\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\r\n\t\tavailableRoutes,\r\n\r\n\t\t// Returns an object with the available fragments as booleans (prev/next)\r\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\r\n\r\n\t\t// Toggles a help overlay with keyboard shortcuts\r\n\t\ttoggleHelp,\r\n\r\n\t\t// Toggles the overview mode on/off\r\n\t\ttoggleOverview: overview.toggle.bind( overview ),\r\n\r\n\t\t// Toggles the \"black screen\" mode on/off\r\n\t\ttogglePause,\r\n\r\n\t\t// Toggles the auto slide mode on/off\r\n\t\ttoggleAutoSlide,\r\n\r\n\t\t// Slide navigation checks\r\n\t\tisFirstSlide,\r\n\t\tisLastSlide,\r\n\t\tisLastVerticalSlide,\r\n\t\tisVerticalSlide,\r\n\r\n\t\t// State checks\r\n\t\tisPaused,\r\n\t\tisAutoSliding,\r\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\r\n\t\tisOverview: overview.isActive.bind( overview ),\r\n\t\tisFocused: focus.isFocused.bind( focus ),\r\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\r\n\r\n\t\t// Checks if reveal.js has been loaded and is ready for use\r\n\t\tisReady: () => ready,\r\n\r\n\t\t// Slide preloading\r\n\t\tloadSlide: slideContent.load.bind( slideContent ),\r\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\r\n\r\n\t\t// Preview management\r\n\t\tshowPreview,\r\n\t\thidePreview: closeOverlay,\r\n\r\n\t\t// Adds or removes all internal event listeners\r\n\t\taddEventListeners,\r\n\t\tremoveEventListeners,\r\n\t\tdispatchEvent,\r\n\r\n\t\t// Facility for persisting and restoring the presentation state\r\n\t\tgetState,\r\n\t\tsetState,\r\n\r\n\t\t// Presentation progress on range of 0-1\r\n\t\tgetProgress,\r\n\r\n\t\t// Returns the indices of the current, or specified, slide\r\n\t\tgetIndices,\r\n\r\n\t\t// Returns an Array of key:value maps of the attributes of each\r\n\t\t// slide in the deck\r\n\t\tgetSlidesAttributes,\r\n\r\n\t\t// Returns the number of slides that we have passed\r\n\t\tgetSlidePastCount,\r\n\r\n\t\t// Returns the total number of slides\r\n\t\tgetTotalSlides,\r\n\r\n\t\t// Returns the slide element at the specified index\r\n\t\tgetSlide,\r\n\r\n\t\t// Returns the previous slide element, may be null\r\n\t\tgetPreviousSlide: () => previousSlide,\r\n\r\n\t\t// Returns the current slide element\r\n\t\tgetCurrentSlide: () => currentSlide,\r\n\r\n\t\t// Returns the slide background element at the specified index\r\n\t\tgetSlideBackground,\r\n\r\n\t\t// Returns the speaker notes string for a slide, or null\r\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\r\n\r\n\t\t// Returns an Array of all slides\r\n\t\tgetSlides,\r\n\r\n\t\t// Returns an array with all horizontal/vertical slides in the deck\r\n\t\tgetHorizontalSlides,\r\n\t\tgetVerticalSlides,\r\n\r\n\t\t// Checks if the presentation contains two or more horizontal\r\n\t\t// and vertical slides\r\n\t\thasHorizontalSlides,\r\n\t\thasVerticalSlides,\r\n\r\n\t\t// Checks if the deck has navigated on either axis at least once\r\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\r\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\r\n\r\n\t\t// Adds/removes a custom key binding\r\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\r\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\r\n\r\n\t\t// Programmatically triggers a keyboard event\r\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\r\n\r\n\t\t// Registers a new shortcut to include in the help overlay\r\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\r\n\r\n\t\tgetComputedSlideSize,\r\n\r\n\t\t// Returns the current scale of the presentation content\r\n\t\tgetScale: () => scale,\r\n\r\n\t\t// Returns the current configuration object\r\n\t\tgetConfig: () => config,\r\n\r\n\t\t// Helper method, retrieves query string as a key:value map\r\n\t\tgetQueryHash: Util.getQueryHash,\r\n\r\n\t\t// Returns the path to the current slide as represented in the URL\r\n\t\tgetSlidePath: location.getHash.bind( location ),\r\n\r\n\t\t// Returns reveal.js DOM elements\r\n\t\tgetRevealElement: () => revealElement,\r\n\t\tgetSlidesElement: () => dom.slides,\r\n\t\tgetViewportElement: () => dom.viewport,\r\n\t\tgetBackgroundsElement: () => backgrounds.element,\r\n\r\n\t\t// API for registering and retrieving plugins\r\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\r\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\r\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\r\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\r\n\r\n\t};\r\n\r\n\t// Our internal API which controllers have access to\r\n\tUtil.extend( Reveal, {\r\n\t\t...API,\r\n\r\n\t\t// Methods for announcing content to screen readers\r\n\t\tannounceStatus,\r\n\t\tgetStatusText,\r\n\r\n\t\t// Controllers\r\n\t\tprint,\r\n\t\tfocus,\r\n\t\tprogress,\r\n\t\tcontrols,\r\n\t\tlocation,\r\n\t\toverview,\r\n\t\tfragments,\r\n\t\tslideContent,\r\n\t\tslideNumber,\r\n\r\n\t\tonUserInput,\r\n\t\tcloseOverlay,\r\n\t\tupdateSlidesVisibility,\r\n\t\tlayoutSlideContents,\r\n\t\ttransformSlides,\r\n\t\tcueAutoSlide,\r\n\t\tcancelAutoSlide\r\n\t} );\r\n\r\n\treturn API;\r\n\r\n};\r\n","import Deck, { VERSION } from './reveal.js'\r\n\r\n/**\r\n * Expose the Reveal class to the window. To create a\r\n * new instance:\r\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\r\n *   controls: false\r\n * } );\r\n * deck.initialize().then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\nlet Reveal = Deck;\r\n\r\n\r\n/**\r\n * The below is a thin shell that mimics the pre 4.0\r\n * reveal.js API and ensures backwards compatibility.\r\n * This API only allows for one Reveal instance per\r\n * page, whereas the new API above lets you run many\r\n * presentations on the same page.\r\n *\r\n * Reveal.initialize( { controls: false } ).then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\n\r\nlet enqueuedAPICalls = [];\r\n\r\nReveal.initialize = options => {\r\n\r\n\t// Create our singleton reveal.js instance\r\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\r\n\r\n\t// Invoke any enqueued API calls\r\n\tenqueuedAPICalls.map( method => method( Reveal ) );\r\n\r\n\treturn Reveal.initialize();\r\n\r\n}\r\n\r\n/**\r\n * The pre 4.0 API let you add event listener before\r\n * initializing. We maintain the same behavior by\r\n * queuing up premature API calls and invoking all\r\n * of them when Reveal.initialize is called.\r\n */\r\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\r\n\tReveal[method] = ( ...args ) => {\r\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\r\n\t}\r\n} );\r\n\r\nReveal.isReady = () => false;\r\n\r\nReveal.VERSION = VERSION;\r\n\r\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","undefined","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeURI","join","isSpeakerNotes","video","muted","getMimeTypeFromFile","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","url","getHash","formatNumber","delimiter","isNaN","destroy","colorToRgb","color","hex3","r","parseInt","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","getSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","delay","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","indexh","indexv","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","keyCode","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","left","right","up","Number","MAX_VALUE","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","closeOverlay","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","getIndicesFromHash","name","hash","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","pathname","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Print","injectPageNumbers","pageWidth","pageHeight","body","viewportElement","presentationBackground","viewportStyles","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","fragmentNumber","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","VERSION","Deck","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","setupFullscreen","resetVerticalSlides","removeEventListeners","setupPDF","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","setInterval","scrollTop","scrollLeft","onFullscreenChange","onPostMessage","isReady","numberOfSlides","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","_ref","createEvent","initEvent","dispatchPostMessage","parent","self","message","namespace","getState","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","len","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","origin","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","syncSlide","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","fragmentWeight","isVertical","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","stopImmediatePropagation","currentTarget","API","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","getPreviousSlide","getSlidePath","getPlugins","enqueuedAPICalls","_len","_key","deck"],"mappings":"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"}